From fingerle at berlios.de  Sun Mar  5 18:10:04 2006
From: fingerle at berlios.de (fingerle at BerliOS)
Date: Sun, 5 Mar 2006 18:10:04 +0100
Subject: [fellowiki-svncheckins] r3 - in trunk/fellowiki: . tests tests/wiki
Message-ID: <200603051710.k25HA4Co017433@sheep.berlios.de>

Author: fingerle
Date: 2006-03-05 18:10:03 +0100 (Sun, 05 Mar 2006)
New Revision: 3

Added:
   trunk/fellowiki/tests/wiki/
   trunk/fellowiki/wiki/
Removed:
   trunk/fellowiki/Wiki/
   trunk/fellowiki/tests/Wiki/
Modified:
   trunk/fellowiki/tests/wiki/ut_wikiparser.py
Log:
- moved Wiki to wiki


Copied: trunk/fellowiki/tests/wiki (from rev 2, trunk/fellowiki/tests/Wiki)

Modified: trunk/fellowiki/tests/wiki/ut_wikiparser.py
===================================================================
--- trunk/fellowiki/tests/Wiki/ut_wikiparser.py	2006-03-05 17:06:53 UTC (rev 2)
+++ trunk/fellowiki/tests/wiki/ut_wikiparser.py	2006-03-05 17:10:03 UTC (rev 3)
@@ -44,7 +44,7 @@
 from elementtree.ElementTree import tostring, fromstring, Element, SubElement
 from xml.parsers.xmlproc import xmlval, utils, xmldtd
 
-from fellowiki.Wiki.parser import WikiParser
+from fellowiki.wiki.parser import WikiParser
 
 # Pre-load the xhtml DTD once, since reloading for each xmlproc
 # would be a major performance hit.

Copied: trunk/fellowiki/wiki (from rev 2, trunk/fellowiki/Wiki)



From fingerle at berlios.de  Sun Mar  5 18:06:55 2006
From: fingerle at berlios.de (fingerle at BerliOS)
Date: Sun, 5 Mar 2006 18:06:55 +0100
Subject: [fellowiki-svncheckins] r2 - / pjm trunk/fellowiki trunk/fellowiki/Wiki trunk/fellowiki/tests trunk/fellowiki/tests/Wiki trunk/fellowiki/third_party/w3c trunk/fellowiki/util
Message-ID: <200603051706.k25H6tSQ017028@sheep.berlios.de>

Author: fingerle
Date: 2006-03-05 18:06:53 +0100 (Sun, 05 Mar 2006)
New Revision: 2

Added:
   pjm/
   pjm/milestones.txt
   pjm/planning/
   pjm/tasks.txt
   pjm/tools/
   trunk/fellowiki/Wiki/parser.py
   trunk/fellowiki/tests/pylintrc
   trunk/fellowiki/third_party/w3c/LICENSE
Removed:
   trunk/fellowiki/Wiki/wikiparser.py
   trunk/fellowiki/third_party/w3c/LICENCE
Modified:
   trunk/fellowiki/Wiki/__init__.py
   trunk/fellowiki/__init__.py
   trunk/fellowiki/tests/Wiki/__init__.py
   trunk/fellowiki/tests/Wiki/ut_wikiparser.py
   trunk/fellowiki/tests/__init__.py
   trunk/fellowiki/util/__init__.py
   trunk/fellowiki/util/assorted.py
Log:
- added pjm project management directory.
- added default config for pylint
- americanized "LICENCE" to "LICNESE" in w3c directory
- fixed indentation from 3 to 4 blanks
- fixed wiki unittest test runner
- fixed __revision__ attribute in all modules
- fixed module doc string in all modules
- fixed violations of PEP 8 / pylint messages in wiki unittest test runner
- fixed violations of PEP 8 / pylint messages in utils.assorted
- moved Wiki.wikiparser to Wiki.parser, renamed Parser class to WikiParser
- fixed a few pylint messages in Wiki.parser


Added: pjm/milestones.txt
===================================================================
--- pjm/milestones.txt	2006-03-01 00:22:03 UTC (rev 1)
+++ pjm/milestones.txt	2006-03-05 17:06:53 UTC (rev 2)
@@ -0,0 +1,18 @@
+achieved:
+=========
+
+
+planned:
+========
+
+0.0.1 working wiki parser
+0.1.0 working wiki 
+0.2.0 page templates are wiki pages
+0.3.0 user DB & access restriction
+0.4.0 minimalistic ML based on user DB
+0.5.0 ML: bounce detection, ensured delivery
+0.6.0 automatic mails sent by user DB / wiki
+0.7.0 user DB admin through mail
+0.8.0 ML admin through mail
+0.9.0 optional text backend for ML (feature complete for 1.0.0)
+1.0.0 first stable version


Property changes on: pjm/milestones.txt
___________________________________________________________________
Name: svn:executable
   + *

Added: pjm/tasks.txt
===================================================================
--- pjm/tasks.txt	2006-03-01 00:22:03 UTC (rev 1)
+++ pjm/tasks.txt	2006-03-05 17:06:53 UTC (rev 2)
@@ -0,0 +1,3 @@
+*) simple web site
+*) some kind of issue tracker - but I don't like the BerliOS ones
+*) get svn mailing list working

Modified: trunk/fellowiki/Wiki/__init__.py
===================================================================
--- trunk/fellowiki/Wiki/__init__.py	2006-03-01 00:22:03 UTC (rev 1)
+++ trunk/fellowiki/Wiki/__init__.py	2006-03-05 17:06:53 UTC (rev 2)
@@ -17,3 +17,14 @@
 # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 # FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 # DEALINGS IN THE SOFTWARE.
+
+"""fellowiki wiki package
+
+This wiki package doesn't do anything special, it's just there to contain
+the subpackages:
+
+    - assorted: should read "unsorted" ;-) TODO: Sort. Sort of. Ish. 
+    
+"""
+
+__revision__ = "$Revision:$"

Copied: trunk/fellowiki/Wiki/parser.py (from rev 1, trunk/fellowiki/Wiki/wikiparser.py)
===================================================================
--- trunk/fellowiki/Wiki/wikiparser.py	2006-03-01 00:22:03 UTC (rev 1)
+++ trunk/fellowiki/Wiki/parser.py	2006-03-05 17:06:53 UTC (rev 2)
@@ -0,0 +1,408 @@
+# Copyright (c) 2006 Jan Niklas Fingerle
+# 
+# Permission is hereby granted, free of charge, to any person obtaining a
+# copy of this software and associated documentation files (the "Software"),
+# to deal in the Software without restriction, including without limitation
+# the rights to use, copy, modify, merge, publish, distribute, sublicense,
+# and/or sell copies of the Software, and to permit persons to whom the
+# Software is furnished to do so, subject to the following conditions:
+#
+# The above copyright notice and this permission notice shall be included in
+# all copies or substantial portions of the Software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
+# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+# DEALINGS IN THE SOFTWARE.
+
+"""fellowiki wiki parser
+
+TODO: overview wiki parser
+    
+"""
+
+__revision__ = "$Revision:$"
+
+
+from elementtree.ElementTree import Element, SubElement
+
+from fellowiki.util.assorted import attributes_from_dict, \
+      remove_escaping_backslashes, add_element_contents
+      
+import sre, re
+
+
+class Token(object):
+    def __init__(self, scanner, token, cut_right = None, cut_left = None,
+                     decode_backslash = False, preference = None, **attr_dict):
+        attributes_from_dict(dict(locals().items()+attr_dict.items()))
+        try:
+            cut_right = -cut_right
+        except TypeError: 
+            pass
+        self.text = token[cut_left:cut_right]
+
+        if decode_backslash:
+            self.text = remove_escaping_backslashes(self.text)
+            
+    def render(self):
+        # fixes rendering, called once!
+        xhtml = Element('div')
+        xhtml.text = self.token
+        return xhtml
+        
+    def match_is_open(self):
+        return False
+    
+    def close_matching(self, match):
+        return False
+    
+    def fold_results(self, result, tokens):
+        new_token = ResultToken()
+        while len(result) > 0 and (self.preference <> None and 
+                (result[-1].preference > self.preference
+                or self.preference < 0
+                or len(result) > 1 and result[-1].preference == None
+                    and (result[-2].preference == None or 
+                          result[-2].preference > self.preference)
+                ) or self.preference == None and result[-1].preference == None):
+            res = result.pop()
+            new_token.prepend_element_contents(res.render())
+        return new_token
+    
+    def evaluate(self, result, tokens, new_token):
+        while len(result) > 0 and self.preference <> None and \
+                (result[-1].preference > self.preference
+                or self.preference < 0
+                or self.match_is_open() and (result[-1].preference == None or
+                result[-1].preference >= self.preference)):
+            res = result.pop()
+            if self.close_matching(res):
+                tokens.insert(0,self.close(res, new_token))
+                return
+            else:
+                new_token.prepend_element_contents(res.render())
+                
+        result.append(new_token)
+        if self.preference >= 0 or self.preference == None:
+            result.append(self)
+
+class ResultToken(Token):
+    def __init__(self):
+        attributes_from_dict(locals())
+        self.preference = None
+        self.xhtml = Element('div')
+        
+    def render(self):
+        return self.xhtml
+        
+    def prepend_element_contents(self, element): 
+        self.xhtml = add_element_contents(element, self.xhtml, 'div')
+
+class EndToken(Token):
+    def __init__(self):
+        attributes_from_dict(locals())
+        self.preference = -1
+        
+    def render(self):
+        xhtml = Element('div')
+        return xhtml
+        
+    def match_is_open(self):
+        return True
+
+class TextToken(Token):
+    def render(self):
+        xhtml = Element('div')
+        xhtml.text = re.sub('[ \n\t]+',' ',self.text)
+        return xhtml
+
+class EmbeddedTextToken(Token):
+    def render(self):
+        xhtml = Element('div')
+        new_token = SubElement(xhtml, self.html_tag)
+        new_token.text = self.text
+        return xhtml
+
+class SingleToken(Token):
+    def render(self):
+        xhtml = Element('div')
+        SubElement(xhtml, self.html_tag)
+        return xhtml
+        
+class EncapsulateToken(Token):
+    open_wiki_markup = {}
+    open_html_markup = {}
+    def evaluate(self, result, tokens, new_token):
+        if self.type == '(':
+            self.is_nested_wiki = bool(self.open_wiki_markup.get(self.text, 
+                                                                                  False))
+            self.is_nested_html = bool(self.open_html_markup.get(self.html_tag,
+                                                                            False))
+            self.open_wiki_markup[self.text] = \
+                                            self.open_wiki_markup.get(self.text, 0) + 1
+            self.open_html_markup[self.html_tag] = \
+                                      self.open_html_markup.get(self.html_tag, 0) + 1
+#          if self.type == '_' and self.open_wiki_markup.get(self.text, False):
+#              self.is_valid_middle_element = markers.get(self.input_marker+'~_',
+#                                                                        False)
+#                markers[self.input_marker+'~_'] = True
+        if self.type == ')':
+            self.second_content = None
+        super(EncapsulateToken, self).evaluate(result, tokens, 
+                                                                          new_token)
+        
+    def match_is_open(self):
+        if self.type == ')':
+            try: 
+                return bool(self.open_wiki_markup[self.text])
+            except KeyError:
+                return False
+        # was ist mit '_'?
+    
+    def close_matching(self, match):
+        if (self.type == ')' and self.__class__ == match.__class__
+            and self.text == match.text
+            and match.type == '(' and not match.is_nested_html):
+            return True
+        else:
+            try:
+                return (self.type == ')' and isinstance(self, match.__class__)
+                    and self.text == match.text
+                    and match.type == '_' and match.is_valid_middle_element)
+            except AttributeError:
+                return False
+            
+    def close(self, match, new_token):
+        if match.type == '(':
+            match.open_wiki_markup[match.text] = \
+                                         match.open_wiki_markup.get(match.text, 0) - 1
+            match.open_html_markup[match.html_tag] = \
+                                    match.open_html_markup.get(match.html_tag, 0) - 1
+            self.type = '*'
+            self.do_close(match, new_token, self.second_content)
+        #elif self.type == '_' and markers[self.input_marker]:
+        #    markers[match.input_marker+'~_'] = False
+        #    self.second_content = new_token
+        else:
+            raise "CloseWhereNotAllowedException" ### TODO
+        return self
+    
+    def gets_eaten(self):
+        if self.type == '(':
+            self.open_wiki_markup[self.text] = \
+                                         self.open_wiki_markup.get(self.text, 0) - 1
+            self.open_html_markup[self.html_tag] = \
+                                    self.open_html_markup.get(self.html_tag, 0) - 1
+
+class EncapsulateMarkupToken(EncapsulateToken):
+    special_markup = {'/': ('em', 'italic'),
+                            '*': ('b', 'bold'),
+                            '_': ('em', 'underline'),
+                            '=': ('tt', 'typewriter'),
+                            "'": ('div', 'single_quotes'),
+                            '"': ('div', 'double_quotes'),
+                            '^': ('div', 'superscript'),
+                            ',': ('div', 'subscript'),
+                            '#': ('div', 'large'),
+                            '~': ('div', 'small')}; # TODO: check for correct markup
+    
+    def __init__(self, scanner, token, *p, **k):
+        super(EncapsulateMarkupToken,self).__init__(scanner, 
+                                                                                 token, *p, **k)
+        self.html_tag = self.special_markup[self.text][0]
+
+    def render(self):
+        xhtml = Element('div')
+        if self.type == '*':
+            self.content.tag = self.special_markup[self.text][0]
+            xhtml[:] = [self.content]
+                
+        else:
+            self.gets_eaten()
+            xhtml.text = self.token
+        return xhtml
+        
+    def do_close(self, match, new_token, second_content):
+        if second_content <> None:
+            raise "EncapsulateMarkupException" ## TODO
+        
+        self.content = new_token.xhtml
+            
+class SwitchMarkupToken(EncapsulateMarkupToken):
+    open_wiki_markup = {}
+    def evaluate(self, result, tokens, new_token):
+        if not hasattr(self, 'type'):
+            if (bool(self.open_wiki_markup.get(self.text, False)) or
+                 bool(self.open_html_markup.get(self.html_tag, False))):
+                self.type = ')'
+            else:
+                self.type = '('
+            
+        super(SwitchMarkupToken, self).evaluate(result, tokens, 
+                                                                            new_token)
+
+class StructureToken(Token):
+    ## all Structure is equal and should be of preference 0
+    open_structure_list = []
+    def __init__(self, scanner, token, *p, **k):
+        super(StructureToken,self).__init__(scanner, token, *p, **k)
+        self.xhtml = Element('div')
+
+    def evaluate(self, result, tokens, new_token):
+        super(StructureToken, self).evaluate(result, tokens, 
+                                                                          new_token)
+        if not self.match_is_open:
+            self.open_structure_list.append(self.html_tag)
+        
+    def match_is_open(self):
+        try:
+            self.open_structure_list.index(self.html_tag)
+            return True
+        except ValueError:
+            return False
+    
+    def close_matching(self, match):
+        return     isinstance(self, match.__class__) \
+                 or isinstance(match, self.__class__)
+            
+    def close(self, match, new_token):
+        new_token.xhtml.tag = self.html_tag
+        match.xhtml.append(new_token.xhtml)
+        while len(self.open_structure_list) > 0:
+          if self.open_structure_list.pop() == self.html_tag: break
+        return match
+        
+    def render(self):
+        return self.xhtml
+            
+
+
+class StructureModifyToken(Token): 
+#modifiziert letzte geoeffnete struktur, wird dann wegfallen lassen => keine
+# preference
+    structure_modifiers = {':': ('align',  'center'),
+                                  '(': ('align',  'left'),
+                                  ')': ('align',  'right'),
+                                  '^': ('valign', 'up'),
+                                  ',': ('valign', 'down')}
+
+
+class PrefixToken(Token): pass
+class HeadlineToken(PrefixToken): pass
+class ListToken(EncapsulateToken): pass
+
+class LinkToken(EncapsulateToken): pass
+class EmbeddedLinkToken(LinkToken): pass
+class MacroToken(LinkToken): pass
+    
+    
+class TableToken(EncapsulateToken): pass
+
+
+
+
+class WikiParser(object):
+    def token(Token, *args, **kw_args):
+        def new_token(scanner, token):
+            return Token(*((scanner, token)+args), **kw_args)
+        return new_token    
+
+
+    regexes = [### escaped text, no wiki tags:
+                  (10, r'\[%([^\\%\[]|\\.|%[^\\\]])*%\]', token(TextToken, 
+                         cut_left=2, 
+                         cut_right=2, decode_backslash = True)),
+                  ### escaped text, preformatted:
+                  (10, r'\[@([^\\@\[]|\\.|@[^\\\]])*@\]', token(EmbeddedTextToken,
+                         preference = 0, html_tag='pre',
+                         cut_left=2, cut_right=2, 
+                         decode_backslash = True)),
+                  ### escaped single character:
+                  (10, r'\\.', token(TextToken, cut_left=1)),
+                  ### line break in output
+                  (20, r'([ \n\t]*\n%%%%%*[ \n\t]*)+\n',
+                         token(SingleToken, preference=10, html_tag='br')),
+                  ### paragraph break
+                  (30, r'\n[ \n\t]*\n', token(StructureToken,
+                         preference = 0, html_tag='p')),
+                  ### line break in input (non-printable)
+                  (40, r'\n', token(TextToken, preference=20)),
+                  ### include link start
+                  (10, r'\[\[\[', token(EmbeddedLinkToken, type='(', 
+                         preference=20)),
+                  ### include link stop
+                  (10, r'\]\]\]', token(EmbeddedLinkToken, type=')', 
+                         preference=20)),
+                  ### link start
+                  (20, r'\[\[', token(LinkToken, type='(', preference=20)),
+                  ### link stop
+                  (20, r'\]\]', token(LinkToken, type=')', preference=20)),
+                  ### link rename
+                  (20, r'[ \t]>>[ \t]', token(LinkToken, type='_', 
+                         preference=20)),
+                  ### special enclosing markup
+                  (90, r'[/\*_=]', token(SwitchMarkupToken, preference=40)),
+                  (10, r'\[[/\*_=\'"^,#~]', token(EncapsulateMarkupToken, type='(',
+                         preference=20, cut_left=1)),
+                  (10, r'[/\*_=\'"^,#~]\]', token(EncapsulateMarkupToken, type=')',
+                         preference=20, cut_right=1)),
+
+                  ### modifiers
+                  (10, r'<[:()^,]>', token(StructureModifyToken, cut_left=1, 
+                         cut_right=1)),
+                  ### headlines
+                  (10, r'\n={1,6}[ \t]', token(HeadlineToken, preference=10)),
+                  ### lists
+                  (10, r'\n[#*-]+[ \t]', token(ListToken, preference=10)),
+                  ### tables
+                  (10, r'\n\|', token(TableToken, type='(', preference=0)),
+                  (10, r'\|(?=\n)', token(TableToken, type=')', preference=0)),
+                  (90, r'\|', token(TableToken, type='_', preference=0)),
+                  ### macros
+                  (10, r'\{\{', token(MacroToken, type='(', preference=20)),
+                  (10, r'\}\}', token(MacroToken, type=')', preference=20)),
+                  ### n-dash and m-dash
+                  (20, r'--', token(TextToken, new_text=u'\u2013')),
+                  (20, r'---', token(TextToken, new_text=u'\u2014')),
+                  ### horizontal rule
+                  (10, r'\n----(?=\n)', token(SingleToken, preference=0, 
+                         html_tag='hr')),
+                  ### what's left 
+                  (90, r'[ \t]', token(TextToken, preference=30)),
+                  (99, r'.', token(TextToken))
+                 ]
+
+    def __init__(self):
+        regexes = self.regexes[:]
+        regexes.sort()
+        regexes = [(b,c) for (a,b,c) in regexes]
+        self.scanner = sre.Scanner(regexes)
+
+    def parse(self, text):
+        tokens = self.scanner.scan(''.join(['\n\n',text,'\n\n']))
+        
+        if tokens[1] <> '':
+            raise 'ParserException' ## TODO: Exception
+        
+        tokens=tokens[0]
+        tokens.append(EndToken())
+        result = []
+        
+        while len(tokens) > 0:
+            token = tokens.pop(0)
+            token.evaluate(result, tokens, token.fold_results(result,tokens))
+        
+        if len(tokens) <> 0:
+            raise 'ParserException' ## TODO: Exception
+        if len(result) <> 1:
+            raise 'ParserException' ## TODO: Exception
+            
+        xhtml_tree = result[0].xhtml
+        
+        xhtml_tree.set('class','parsed-wiki-content')
+        
+        return xhtml_tree

Deleted: trunk/fellowiki/Wiki/wikiparser.py
===================================================================
--- trunk/fellowiki/Wiki/wikiparser.py	2006-03-01 00:22:03 UTC (rev 1)
+++ trunk/fellowiki/Wiki/wikiparser.py	2006-03-05 17:06:53 UTC (rev 2)
@@ -1,428 +0,0 @@
-# Copyright (c) 2006 Jan Niklas Fingerle
-# 
-# Permission is hereby granted, free of charge, to any person obtaining a
-# copy of this software and associated documentation files (the "Software"),
-# to deal in the Software without restriction, including without limitation
-# the rights to use, copy, modify, merge, publish, distribute, sublicense,
-# and/or sell copies of the Software, and to permit persons to whom the
-# Software is furnished to do so, subject to the following conditions:
-#
-# The above copyright notice and this permission notice shall be included in
-# all copies or substantial portions of the Software.
-#
-# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
-# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-# DEALINGS IN THE SOFTWARE.
-
-from elementtree.ElementTree import Element, SubElement, tostring
-
-from fellowiki.util.assorted import attributesFromDict, \
-     remove_escaping_backslashes, save_add, add_element_contents
-     
-import sys, sre, re
-
-
-class Token(object):
-   def __init__(self, scanner, token, cut_right = None, cut_left = None,
-                decode_backslash = False, preference = None, **attr_dict):
-      attributesFromDict(dict(locals().items()+attr_dict.items()))
-      try:
-         cut_right = -cut_right
-      except TypeError: 
-         pass
-      self.text = token[cut_left:cut_right]
-
-      if decode_backslash:
-         self.text = remove_escaping_backslashes(self.text)
-         
-   def render(self):
-      # fixes rendering, called once!
-      xhtml = Element('div')
-      xhtml.text = self.token
-      return xhtml
-      
-   def match_is_open(self):
-      return False
-   
-   def close_matching(self, match):
-      return False
-   
-   def fold_results(self, result, tokens):
-      new_token = ResultToken()
-      while len(result) > 0 and (self.preference <> None and 
-            (result[-1].preference > self.preference
-            or self.preference < 0
-            or len(result) > 1 and result[-1].preference == None
-               and (result[-2].preference == None or 
-                    result[-2].preference > self.preference)
-            ) or self.preference == None and result[-1].preference == None):
-         res = result.pop()
-         new_token.prepend_element_contents(res.render())
-      return new_token
-   
-   def evaluate(self, result, tokens, new_token):
-      while len(result) > 0 and self.preference <> None and \
-            (result[-1].preference > self.preference
-            or self.preference < 0
-            or self.match_is_open() and (result[-1].preference == None or
-            result[-1].preference >= self.preference)):
-         res = result.pop()
-         if self.close_matching(res):
-            tokens.insert(0,self.close(res, new_token))
-            return
-         else:
-            new_token.prepend_element_contents(res.render())
-            
-      result.append(new_token)
-      if self.preference >= 0 or self.preference == None:
-         result.append(self)
-
-class ResultToken(Token):
-   def __init__(self):
-      attributesFromDict(locals())
-      self.preference = None
-      self.xhtml = Element('div')
-      
-   def render(self):
-      return self.xhtml
-      
-   def prepend_element_contents(self, element): 
-      self.xhtml = add_element_contents(element, self.xhtml, 'div')
-
-class EndToken(Token):
-   def __init__(self):
-      attributesFromDict(locals())
-      self.preference = -1
-      
-   def render(self):
-      xhtml = Element('div')
-      return xhtml
-      
-   def match_is_open(self):
-      return True
-
-class TextToken(Token):
-   def render(self):
-      xhtml = Element('div')
-      xhtml.text = re.sub('[ \n\t]+',' ',self.text)
-      return xhtml
-
-class EmbeddedTextToken(Token):
-   def render(self):
-      xhtml = Element('div')
-      new_token = SubElement(xhtml, self.html_tag)
-      new_token.text = self.text
-      return xhtml
-
-class SingleToken(Token):
-   def render(self):
-      xhtml = Element('div')
-      SubElement(xhtml, self.html_tag)
-      return xhtml
-      
-class EncapsulateToken(Token):
-   open_wiki_markup = {}
-   open_html_markup = {}
-   def evaluate(self, result, tokens, new_token):
-      if self.type == '(':
-         self.is_nested_wiki = bool(self.open_wiki_markup.get(self.text, 
-                                                              False))
-         self.is_nested_html = bool(self.open_html_markup.get(self.html_tag,
-                                                         False))
-         self.open_wiki_markup[self.text] = \
-                                 self.open_wiki_markup.get(self.text, 0) + 1
-         self.open_html_markup[self.html_tag] = \
-                             self.open_html_markup.get(self.html_tag, 0) + 1
-#        if self.type == '_' and self.open_wiki_markup.get(self.text, False):
-#           self.is_valid_middle_element = markers.get(self.input_marker+'~_',
-#                                                      False)
-#            markers[self.input_marker+'~_'] = True
-      if self.type == ')':
-         self.second_content = None
-      super(EncapsulateToken, self).evaluate(result, tokens, 
-                                                        new_token)
-      
-   def match_is_open(self):
-      if self.type == ')':
-         try: 
-            return bool(self.open_wiki_markup[self.text])
-         except KeyError:
-            return False
-      # was ist mit '_'?
-   
-   def close_matching(self, match):
-      if (self.type == ')' and self.__class__ == match.__class__
-         and self.text == match.text
-         and match.type == '(' and not match.is_nested_html):
-         return True
-      else:
-         try:
-            return (self.type == ')' and isinstance(self, match.__class__)
-               and self.text == match.text
-               and match.type == '_' and match.is_valid_middle_element)
-         except AttributeError:
-            return False
-         
-   def close(self, match, new_token):
-      if match.type == '(':
-         match.open_wiki_markup[match.text] = \
-                               match.open_wiki_markup.get(match.text, 0) - 1
-         match.open_html_markup[match.html_tag] = \
-                           match.open_html_markup.get(match.html_tag, 0) - 1
-         self.type = '*'
-         self.do_close(match, new_token, self.second_content)
-      #elif self.type == '_' and markers[self.input_marker]:
-      #   markers[match.input_marker+'~_'] = False
-      #   self.second_content = new_token
-      else:
-         raise "CloseWhereNotAllowedException" ### TODO
-      return self
-   
-   def gets_eaten(self):
-      if self.type == '(':
-         self.open_wiki_markup[self.text] = \
-                               self.open_wiki_markup.get(self.text, 0) - 1
-         self.open_html_markup[self.html_tag] = \
-                           self.open_html_markup.get(self.html_tag, 0) - 1
-
-class EncapsulateMarkupToken(EncapsulateToken):
-   special_markup = {'/': ('em', 'italic'),
-                     '*': ('b', 'bold'),
-                     '_': ('em', 'underline'),
-                     '=': ('tt', 'typewriter'),
-                     "'": ('div', 'single_quotes'),
-                     '"': ('div', 'double_quotes'),
-                     '^': ('div', 'superscript'),
-                     ',': ('div', 'subscript'),
-                     '#': ('div', 'large'),
-                     '~': ('div', 'small')}; # TODO: check for correct markup
-   
-   def __init__(self, scanner, token, *p, **k):
-      super(EncapsulateMarkupToken,self).__init__(scanner, 
-                                                             token, *p, **k)
-      self.html_tag = self.special_markup[self.text][0]
-
-   def render(self):
-      xhtml = Element('div')
-      if self.type == '*':
-         self.content.tag = self.special_markup[self.text][0]
-         xhtml[:] = [self.content]
-            
-      else:
-         self.gets_eaten()
-         xhtml.text = self.token
-      return xhtml
-      
-   def do_close(self, match, new_token, second_content):
-      if second_content <> None:
-         raise "EncapsulateMarkupException" ## TODO
-      
-      self.content = new_token.xhtml
-         
-class SwitchMarkupToken(EncapsulateMarkupToken):
-   open_wiki_markup = {}
-   def evaluate(self, result, tokens, new_token):
-      if not hasattr(self, 'type'):
-         if (bool(self.open_wiki_markup.get(self.text, False)) or
-             bool(self.open_html_markup.get(self.html_tag, False))):
-            self.type = ')'
-         else:
-            self.type = '('
-         
-      super(SwitchMarkupToken, self).evaluate(result, tokens, 
-                                                         new_token)
-
-class StructureToken(Token):
-   ## all Structure is equal and should be of preference 0
-   open_structure_list = []
-   def __init__(self, scanner, token, *p, **k):
-      super(StructureToken,self).__init__(scanner, token, *p, **k)
-      self.xhtml = Element('div')
-
-   def evaluate(self, result, tokens, new_token):
-      super(StructureToken, self).evaluate(result, tokens, 
-                                                        new_token)
-      if not self.match_is_open:
-         self.open_structure_list.append(self.html_tag)
-      
-   def match_is_open(self):
-      try:
-         self.open_structure_list.index(self.html_tag)
-         return True
-      except ValueError:
-         return False
-   
-   def close_matching(self, match):
-      return    isinstance(self, match.__class__) \
-             or isinstance(match, self.__class__)
-         
-   def close(self, match, new_token):
-      new_token.xhtml.tag = self.html_tag
-      match.xhtml.append(new_token.xhtml)
-      while len(self.open_structure_list) > 0:
-        if self.open_structure_list.pop() == self.html_tag: break
-      return match
-      
-   def render(self):
-      return self.xhtml
-         
-
-
-class StructureModifyToken(Token): 
-#modifiziert letzte geoeffnete struktur, wird dann wegfallen lassen => keine
-# preference
-   structure_modifiers = {':': ('align',  'center'),
-                          '(': ('align',  'left'),
-                          ')': ('align',  'right'),
-                          '^': ('valign', 'up'),
-                          ',': ('valign', 'down')}
-
-
-class PrefixToken(Token): pass
-class HeadlineToken(PrefixToken): pass
-class ListToken(EncapsulateToken): pass
-
-class LinkToken(EncapsulateToken): pass
-class EmbeddedLinkToken(LinkToken): pass
-class MacroToken(LinkToken): pass
-   
-   
-class TableToken(EncapsulateToken): pass
-
-
-
-
-class Parser(object):
-   def token(Token, *args, **kw_args):
-      def new_token(scanner, token):
-         return Token(*((scanner, token)+args), **kw_args)
-      return new_token   
-
-
-   regexes = [### escaped text, no wiki tags:
-              (10, r'\[%([^\\%\[]|\\.|%[^\\\]])*%\]', token(TextToken, 
-                   cut_left=2, 
-                   cut_right=2, decode_backslash = True)),
-              ### escaped text, preformatted:
-              (10, r'\[@([^\\@\[]|\\.|@[^\\\]])*@\]', token(EmbeddedTextToken,
-                   preference = 0, html_tag='pre',
-                   cut_left=2, cut_right=2, 
-                   decode_backslash = True)),
-              ### escaped single character:
-              (10, r'\\.', token(TextToken, cut_left=1)),
-              ### line break in output
-              (20, r'([ \n\t]*\n%%%%%*[ \n\t]*)+\n',
-                   token(SingleToken, preference=10, html_tag='br')),
-              ### paragraph break
-              (30, r'\n[ \n\t]*\n', token(StructureToken,
-                   preference = 0, html_tag='p')),
-              ### line break in input (non-printable)
-              (40, r'\n', token(TextToken, preference=20)),
-              ### include link start
-              (10, r'\[\[\[', token(EmbeddedLinkToken, type='(', 
-                   preference=20)),
-              ### include link stop
-              (10, r'\]\]\]', token(EmbeddedLinkToken, type=')', 
-                   preference=20)),
-              ### link start
-              (20, r'\[\[', token(LinkToken, type='(', preference=20)),
-              ### link stop
-              (20, r'\]\]', token(LinkToken, type=')', preference=20)),
-              ### link rename
-              (20, r'[ \t]>>[ \t]', token(LinkToken, type='_', 
-                   preference=20)),
-              ### special enclosing markup
-              (90, r'[/\*_=]', token(SwitchMarkupToken, preference=40)),
-              (10, r'\[[/\*_=\'"^,#~]', token(EncapsulateMarkupToken, type='(',
-                   preference=20, cut_left=1)),
-              (10, r'[/\*_=\'"^,#~]\]', token(EncapsulateMarkupToken, type=')',
-                   preference=20, cut_right=1)),
-
-              ### modifiers
-              (10, r'<[:()^,]>', token(StructureModifyToken, cut_left=1, 
-                   cut_right=1)),
-              ### headlines
-              (10, r'\n={1,6}[ \t]', token(HeadlineToken, preference=10)),
-              ### lists
-              (10, r'\n[#*-]+[ \t]', token(ListToken, preference=10)),
-              ### tables
-              (10, r'\n\|', token(TableToken, type='(', preference=0)),
-              (10, r'\|(?=\n)', token(TableToken, type=')', preference=0)),
-              (90, r'\|', token(TableToken, type='_', preference=0)),
-              ### macros
-              (10, r'\{\{', token(MacroToken, type='(', preference=20)),
-              (10, r'\}\}', token(MacroToken, type=')', preference=20)),
-              ### n-dash and m-dash
-              (20, r'--', token(TextToken, new_text=u'\u2013')),
-              (20, r'---', token(TextToken, new_text=u'\u2014')),
-              ### horizontal rule
-              (10, r'\n----(?=\n)', token(SingleToken, preference=0, 
-                   html_tag='hr')),
-              ### what's left 
-              (90, r'[ \t]', token(TextToken, preference=30)),
-              (99, r'.', token(TextToken))
-             ]
-
-   def __init__(self):
-      regexes = self.regexes[:]
-      regexes.sort()
-      regexes = [(b,c) for (a,b,c) in regexes]
-      self.scanner = sre.Scanner(regexes)
-
-   def parse(self, text):
-      tokens = self.scanner.scan(''.join(['\n\n',text,'\n\n']))
-      
-      if tokens[1] <> '':
-         raise 'ParserException' ## TODO: Exception
-      
-      tokens=tokens[0]
-      tokens.append(EndToken())
-      result = []
-      
-      while len(tokens) > 0:
-         token = tokens.pop(0)
-         token.evaluate(result, tokens, token.fold_results(result,tokens))
-      
-      if len(tokens) <> 0:
-         raise 'ParserException' ## TODO: Exception
-      if len(result) <> 1:
-         raise 'ParserException' ## TODO: Exception
-         
-      xhtml_tree = result[0].xhtml
-      
-      xhtml_tree.set('class','parsed-wiki-content')
-      
-      return xhtml_tree
-
-if __name__ == '__main__':
-      print tostring(Parser().parse(u"""**[*hallo*]*[*[=[/[/[*[/h/]/]*]*]
-      
-*hallo*
-
-*/hallo/*
-
-*[*hallo*]*
-
-[**hallo**]
-
-%%%%%
-hallo
-
-[@Dies ist so formatiert,
-wie es angezeigt werden soll.
-
-Wirklich@]
-
-[=hallo=]
-
-%%%%%
-hallo
-%%%%%
-[%test\\\\test\%]%][%nochntest%][@pretest@]hallo
-"""))
-
-

Modified: trunk/fellowiki/__init__.py
===================================================================
--- trunk/fellowiki/__init__.py	2006-03-01 00:22:03 UTC (rev 1)
+++ trunk/fellowiki/__init__.py	2006-03-05 17:06:53 UTC (rev 2)
@@ -17,3 +17,16 @@
 # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 # FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 # DEALINGS IN THE SOFTWARE.
+
+"""fellowiki main package
+
+This main package doesn't do anything special, it's just there to contain
+the subpackages:
+
+    - wiki:  the wiki engine
+    - util:  utility functions used in the other sub-packages except "tests"
+    - tests: tests (mainly unit tests) for the fellowiki package
+    
+"""
+
+__revision__ = "$Revision:$"

Modified: trunk/fellowiki/tests/Wiki/__init__.py
===================================================================
--- trunk/fellowiki/tests/Wiki/__init__.py	2006-03-01 00:22:03 UTC (rev 1)
+++ trunk/fellowiki/tests/Wiki/__init__.py	2006-03-05 17:06:53 UTC (rev 2)
@@ -17,3 +17,16 @@
 # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 # FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 # DEALINGS IN THE SOFTWARE.
+
+"""fellowiki wiki test package
+
+This wiki test package doesn't do anything special, it's just there to contain
+the subpackages:
+
+    - ut_wikiparser: unit tests for the wiki parser
+    
+"""
+
+__revision__ = "$Revision:$"
+
+# TODO: move Wiki package to wiki

Modified: trunk/fellowiki/tests/Wiki/ut_wikiparser.py
===================================================================
--- trunk/fellowiki/tests/Wiki/ut_wikiparser.py	2006-03-01 00:22:03 UTC (rev 1)
+++ trunk/fellowiki/tests/Wiki/ut_wikiparser.py	2006-03-05 17:06:53 UTC (rev 2)
@@ -1,3 +1,6 @@
+# pylint: disable-msg=W0702,W0706
+# W0702, W0706: allow exception handling scheme in new_test_func
+
 # Copyright (c) 2006 Jan Niklas Fingerle
 # 
 # Permission is hereby granted, free of charge, to any person obtaining a
@@ -18,20 +21,20 @@
 # FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 # DEALINGS IN THE SOFTWARE.
 
+# XHTML validating inspired by Cookbook, recipe 12.8 TODO: elaborate
 
-
-
-# XHTML validating inspired by Cookbook, recipe 12.8
-
 """unit tests for the classmates wiki parser
 
 The unit test suite  for the classmates wiki parser is made available through 
-the "testSuite" variable.
-   
-The function "make_wiki_test_suite" may be used to implement unit test for 
+the "suite()" function.
+    
+The function "make_wiki_test_suite()" may be used to implement unit test for 
 extensions to the classmates wiki parser.
+
 """
 
+__revision__ = "$Revision:$"
+
 import unittest
 import codecs
 import sys
@@ -41,146 +44,195 @@
 from elementtree.ElementTree import tostring, fromstring, Element, SubElement
 from xml.parsers.xmlproc import xmlval, utils, xmldtd
 
-from fellowiki.Wiki.wikiparser import Parser
+from fellowiki.Wiki.parser import WikiParser
 
 # Pre-load the xhtml DTD once, since reloading for each xmlproc
 # would be a major performance hit.
-_xhtml_dtd = xmldtd.load_dtd(join(dirname(abspath(__file__)),'..','..',
-                                 'third_party','w3c','xhtml1-strict.dtd'))
-   
-def _assert_etrees(a, b):
-   self.assertEqual(a.tag, b.tag, 'Tag comparison failed')
-   self.assertEqual(a.text, b.text, 'Text comparison failed')
-   self.assertEqual(a.tail, b.tail, 'Tail comparison failed')
-   self.assertEqual(a.attrib, b.attrib, 'Attrib comparison failed')
-   
-   a_children = a.getchildren()
-   b_children = b.getchildren()
-   
-   self.assertEqual(len(a_children), len(b_children), 
-                    'len(children) comparison failed')
-      
-   for (a_child, b_child) in zip(a_children, b_children):
-      _assert_etrees(a_child, b_child)
-   
-      
-      
+_xhtml_dtd = xmldtd.load_dtd(join(dirname(abspath(__file__)), '..', '..',
+                                  'third_party', 'w3c', 'xhtml1-strict.dtd'))
+    
 def _make_new_test_func(fname, tc_extension):
-   """generates a new test function to be used in our unit tests
-   
-   The generated function parses the file <fname>.wiki and compares the
-   result to the content of <fname>.<tc_extension>.xml. 
-   
-   If the unit test fails or leads to an error, an attempt is made, to write 
-   <fname>.<tc_extension>.generated.xml. If this write attempt fails, it does 
-   so silently. 
-   In any case the original fail or error (that occured before the writing
-   attempt) will be raised to the caller (i.e. 
-   the unit test "test runner").
-   
-   "fname" should be given with its full path.
-   """
-   
-   def new_test_func(self):
-      try:
-         wiki_file = codecs.open('%s.wiki' % fname,'r','utf8')
-         wiki_text = wiki_file.read()
-         wiki_file.close()
-         
-         xhtml_tree_wiki = self.parser.parse(wiki_text)
-         
-         xhtml_tree_wiki_ext = Element('html', 
-                                       xmlns='http://www.w3.org/1999/xhtml')
-         head = SubElement(xhtml_tree_wiki_ext,'head')
-         SubElement(head,'title')
-         body = SubElement(xhtml_tree_wiki_ext,'body')
-         body.append(xhtml_tree_wiki)
-         
-         xhtml_text_wiki_ext = tostring(xhtml_tree_wiki_ext)
-         
-         xhtml_tree_wiki_ext_cononical = fromstring(xhtml_text_wiki_ext)
-         
-         try:
-            xhtml_fn = '%s.%s.xml' % (fname, tc_extension)
-            xhtml_file = codecs.open(xhtml_fn,'r','utf8')
-            xhtml_text = xhtml_file.read()
-            xhtml_file.close()
-         except IOError:
-            self.fail('Missing expected XHTML, could not open "%s"' % xhtml_fn)
-         
-         self.xhtml_validator.parse_resource(xhtml_fn) ## XHTML must be valid
-         
-         xhtml_tree = fromstring(xhtml_text)
-         
-         _assert_etrees(xhtml_tree, xhtml_tree_wiki_ext_cononical)
-      
-      except:
-         # I want to re-raise *this* exception with full traceback, even if I 
-         # get another one inbetween:
-         (ex_type, ex_val, ex_tb) = sys.exc_info()
-         try:
-            gen_file = codecs.open('%s.%s.generated.xml' % 
-                         (args['fname'], args['tc_extension']), 'w+','utf8')
-            gen_file.write(args['xhtml_text_wiki_ext'])
-            gen_file.close
-         except:
-            pass # it's only debug output after all
-         raise ex_type, ex_val, ex_tb 
+    """generate a new test function to be used in our unit tests
+    
+    parameters: fname:        fully qualified filename, but without file 
+                              extension, to generate the test case from
+                tc_extension: extension name of the test case, refer to 
+                              new_test_func for exact desciption
+    returns: test function for the new test case. The test funcion takes
+             one argument, self, and is to be used as a method of WikiTestCase.
+    throws: nothing to be expected
 
-   return new_test_func
-   
+    The returned test function is always "the same", with the one exception
+    that it uses different "fname" and "tc_extension" values (i.e. it's a
+    closure).
+
+    """
+
+    def new_test_func(self):
+        """test translation of one wiki markup string
+        
+        parameters: self: instance of WikiTestCase
+        returns: nothing
+        throws: whatever exceptions occur during parsing of the wiki text
+                and exceptions used by the unittest framework to signal 
+                test failure
+        bound to (closure): "fname" and "tc_extension" from the surrounding 
+                            scope
+        
+        The function parses the file <fname>.wiki and compares the result to 
+        the content of <fname>.<tc_extension>.xml. 
+        
+        If the unit test fails or leads to an error, an attempt is made, to 
+        write <fname>.<tc_extension>.generated.xml. If this write attempt 
+        fails, it does so silently. 
+        In any case the original fail or error (that occured before the 
+        writing attempt) will be raised to the caller (i.e. the unit test 
+        "test runner").
+        
+        """
+        
+        try:
+            # parse wiki text to XML tree
+            wiki_file = codecs.open('%s.wiki' % fname, 'r', 'utf8')
+            wiki_text = wiki_file.read()
+            wiki_file.close()
+            xhtml_tree_wiki = self.parser.parse(wiki_text)
+            
+            # 'extend' tree to a complete XML tree
+            xhtml_tree_wiki_ext = Element('html', 
+                                          xmlns='http://www.w3.org/1999/xhtml')
+            head = SubElement(xhtml_tree_wiki_ext,'head')
+            SubElement(head,'title')
+            body = SubElement(xhtml_tree_wiki_ext,'body')
+            body.append(xhtml_tree_wiki)
+            
+            # do one 'round trip' to get a canonical form
+            xhtml_text_wiki_ext = tostring(xhtml_tree_wiki_ext)
+            xhtml_tree_wiki_ext_cononical = fromstring(xhtml_text_wiki_ext)
+            
+            # read expected XML tree from file
+            try:
+                xhtml_fn = '%s.%s.xml' % (fname, tc_extension)
+                xhtml_file = codecs.open(xhtml_fn, 'r', 'utf8')
+                xhtml_text = xhtml_file.read()
+                xhtml_file.close()
+            except IOError:
+                self.fail('Could not open XML file "%s"' % xhtml_fn)
+            xhtml_tree = fromstring(xhtml_text)
+            
+            # and now for the tests
+            self._assert_etrees(xhtml_tree, xhtml_tree_wiki_ext_cononical)
+            self.xhtml_validator.parse_resource(xhtml_fn) # validate as XHTML
+            
+        except:
+            # I want to re-raise *this* exception with full traceback, even if I
+            # get another one inbetween
+            (ex_type, ex_val, ex_tb) = sys.exc_info()
+            try:
+                gen_file = codecs.open('%s.%s.generated.xml' % 
+                             (fname, tc_extension), 'w+','utf8')
+                gen_file.write(xhtml_text_wiki_ext)
+                gen_file.close
+            except:
+                pass # it's only debug output after all
+            raise ex_type, ex_val, ex_tb 
+    return new_test_func
+    
 def make_wiki_test_suite(tc_extension, 
                          tc_name = None, tc_path = 
                          join(dirname(abspath(__file__)),'tests'), **kwargs):
-   """Generates a new wiki test suite for unit testing. 
-   """
-   if tc_name == None:
-      tc_name = tc_extension      
-   
-   sub_test_suites = []
-   class new_class(unittest.TestCase): pass
-      
-   new_class.__name__ = 'WikiTestCase_%s' % tc_name
-      
-   def new_setUp(self): 
-      self.parser = Parser(**kwargs)
-      # unfortunately I need a new validator each time around (Bug in xmlval:
-      # part of the old file remains in the buffer)
-      self.xhtml_validator = xmlval.XMLValidator()
-      self.xhtml_validator.set_error_handler(utils.ErrorRaiser(self.xhtml_validator))
-      self.xhtml_validator.val.dtd = self.xhtml_validator.dtd = self.xhtml_validator.ent = _xhtml_dtd
+    """generate a new wiki test suite for unit testing
+    
+    parameters: tc_extension: extension for XML file names ("<fname>.wiki" will
+                              be compared to <fname>.<tc_extension>.xml)
+                tc_name:      suffix for the test case classes name (will be
+                              "WikiTestCase_<tc_name>"). If None (default), 
+                              tc_extension will be used.
+                tc_path:      directory, where to look for *.wiki and *.xml 
+                              files. Defaults to subdirectory "tests" of the 
+                              directory where this file is located.
+                **kwargs:     Any additional keyword arguments are passed to 
+                              the wiki parser's __init__() method.
+    returns: an instance of unittest.TestSuite
+    throws: nothing to be expected
+     
+    Test cases and test suites are generated "the normal way" from classes. 
+    Therefore the test case classes must be generated dynamically. In the end
+    the internal structure of the test suites is more like normal test cases
+    than if we had built the suites ourselves.
+       
+    """
+    
+    if tc_name == None:
+        tc_name = tc_extension        
+    
+    class WikiTestCase(unittest.TestCase):
+        """test case for the wiki parser"""
+        
+        def _assert_etrees(self, etree_1, etree_2):
+            """assert that two ElementTrees are equal
+            
+            parameters: self:    instance of subclass of unittest.TestCase
+                        etree_1, 
+                        etree2:  two ElementTrees
+            
+            """
+            
+            self.assertEqual(etree_1.tag, etree_2.tag)
+            self.assertEqual(etree_1.text, etree_2.text)
+            self.assertEqual(etree_1.tail, etree_2.tail)
+            self.assertEqual(etree_1.attrib, etree_2.attrib)
+            
+            children_1 = etree_1.getchildren()
+            children_2 = etree_2.getchildren()
+            
+            self.assertEqual(len(children_1), len(children_2))
+            for (child_1, child_2) in zip(children_1, children_2):
+                self._assert_etrees(child_1, child_2)
+                
+        def setUp(self): 
+            """set up wiki parser and xhtml validator"""
+            self.parser = WikiParser(**kwargs)
+            # unfortunately I need a new validator each time around (Bug in 
+            # xmlval: part of the old file remains in the buffer)
+            self.xhtml_validator = xmlval.XMLValidator()
+            self.xhtml_validator.set_error_handler(utils.ErrorRaiser(
+                                                          self.xhtml_validator))
+            self.xhtml_validator.val.dtd = self.xhtml_validator.dtd = \
+                                           self.xhtml_validator.ent = _xhtml_dtd
+        
+    WikiTestCase.__name__ = 'WikiTestCase_%s' % tc_name
+    
+    # find test files and subdirectories
+    fnames = listdir(tc_path)
+    fnames = [file_ for file_ in fnames if file_[0:1] != '.'] # no hidden files
+    fnames = [join(tc_path, file_) for file_ in fnames] 
+    files = [splitext(file_)[0] for file_ in fnames 
+                                               if splitext(file_)[1] == '.wiki']
+    dirs = [file_ for file_ in fnames if isdir(file_)]
+    
+    # for every *.wiki file generate a test method
+    for file_ in files:
+        new_test_func = _make_new_test_func(file_, tc_extension)
+        new_test_func.__doc__ = "wiki parser: %s - %s" % \
+                                                      (tc_name, basename(file_))
+        new_test_func.__name__ = tf_name = "test_%s" % basename(file_)
+        setattr(WikiTestCase, tf_name, new_test_func)
+    
+    # generate test suite and add sub-test-suites
+    suite_ = unittest.makeSuite(WikiTestCase)
+    for dir_ in dirs:
+        suite_.addTest(make_wiki_test_suite(tc_extension, 
+                                           tc_name = '%s_%s' %
+                                                      (tc_name, basename(dir_)),
+                                           tc_path = dir_, 
+                                           **kwargs))
+    
+    return suite_
+    
+def suite():
+    """return default unit test suite for this module"""
+    return make_wiki_test_suite('complete')
 
-   new_setUp.__name__ = 'setUp'
-   new_class.setUp = new_setUp
-   
-   fnames = listdir(tc_path)
-   fnames = [f for f in fnames if f[0:1] <> '.']
-   fnames = [join(tc_path,f) for f in fnames]
-   
-   files = [splitext(f)[0] for f in fnames if splitext(f)[1] == '.wiki']
-   dirs = [f for f in fnames if isdir(f)]
-   
-   for f in files:
-      new_test_func = _make_new_test_func(f, tc_extension)
-      
-      tf_name = "test_%s" % basename(f)
-      new_test_func.__name__ = tf_name
-      
-      setattr(new_class, tf_name, new_test_func)
-   
-   testSuite = unittest.makeSuite(new_class)
-   
-   for d in dirs:
-      print d
-      testSuite.addTest(make_wiki_test_suite(tc_extension, 
-                                             tc_name = '%s_%s' %(tc_name, 
-                                                                 basename(d)), 
-                                             tc_path = d, 
-                                             **kwargs))
-   
-   return testSuite
-   
-testSuite = make_wiki_test_suite('complete')
-
 if __name__ == '__main__':
-   unittest.TextTestRunner(verbosity=2).run(testSuite)
+    unittest.TextTestRunner(verbosity=2).run(suite())

Modified: trunk/fellowiki/tests/__init__.py
===================================================================
--- trunk/fellowiki/tests/__init__.py	2006-03-01 00:22:03 UTC (rev 1)
+++ trunk/fellowiki/tests/__init__.py	2006-03-05 17:06:53 UTC (rev 2)
@@ -17,3 +17,14 @@
 # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 # FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 # DEALINGS IN THE SOFTWARE.
+
+"""fellowiki test package
+
+This test package doesn't do anything special, it's just there to contain
+the subpackages:
+
+    - wiki:  tests for the wiki engine
+    
+"""
+
+__revision__ = "$Revision:$"

Added: trunk/fellowiki/tests/pylintrc
===================================================================
--- trunk/fellowiki/tests/pylintrc	2006-03-01 00:22:03 UTC (rev 1)
+++ trunk/fellowiki/tests/pylintrc	2006-03-05 17:06:53 UTC (rev 2)
@@ -0,0 +1,41 @@
+[REPORTS]
+# Include message's id in output
+include-ids=yes
+
+disable-msg=I0011, W0142
+
+[VARIABLES]
+# List of variable names used for dummy variables (i.e. not used).
+dummy-variables=dummy, _
+
+[BASIC]
+# Required attributes for module, separated by a comma
+required-attributes=__revision__
+
+# Regular expression which should only match functions or classes name which do
+# not require a docstring
+no-docstring-rgx=
+
+# List of builtins function names that should not be used, separated by a comma
+bad-functions=apply
+# apply is deprecated
+
+
+# Regular expression which should only match correct method names
+method-rgx=[a-z_][a-z0-9_]*$|setUp|tearDown
+
+
+[DESIGN]
+enable-design=no
+
+[IMPORTS]
+# Deprecated modules which should not be used, separated by a comma
+deprecated-modules=regsub,TERMIOS,Bastion,rexec
+
+[FORMAT]
+max-line-length=79
+
+indent-string='    '
+
+[MISCELLANEOUS]
+notes=FIXME,XXX,TODO,###,!!!

Deleted: trunk/fellowiki/third_party/w3c/LICENCE
===================================================================
--- trunk/fellowiki/third_party/w3c/LICENCE	2006-03-01 00:22:03 UTC (rev 1)
+++ trunk/fellowiki/third_party/w3c/LICENCE	2006-03-05 17:06:53 UTC (rev 2)
@@ -1,47 +0,0 @@
-W3C(R) SOFTWARE NOTICE AND LICENSE 
-
-Copyright (c) 1994-2002 World Wide Web Consortium, (Massachusetts Institute of 
-Technology, Institut National de Recherche en Informatique et en Automatique, 
-Keio University). All Rights Reserved. http://www.w3.org/Consortium/Legal/ 
-
-This W3C work (including software, documents, or other related items) is being 
-provided by the copyright holders under the following license. By obtaining, 
-using and/or copying this work, you (the licensee) agree that you have read, 
-understood, and will comply with the following terms and conditions: 
-
-Permission to use, copy, modify, and distribute this software and its 
-documentation, with or without modification, for any purpose and without fee 
-or royalty is hereby granted, provided that you include the following on ALL 
-copies of the software and documentation or portions thereof, including 
-modifications, that you make: 
-
-The full text of this NOTICE in a location viewable to users of the 
-redistributed or derivative work. 
-
-Any pre-existing intellectual property disclaimers, notices, or terms and 
-conditions. If none exist, a short notice of the following form (hypertext is 
-preferred, text is permitted) should be used within the body of any 
-redistributed or derivative code: "Copyright ? [$date-of-software] World Wide 
-Web Consortium, (Massachusetts Institute of Technology, Institut National de 
-Recherche en Informatique et en Automatique, Keio University). All Rights 
-Reserved. http://www.w3.org/Consortium/Legal/" 
-
-Notice of any changes or modifications to the W3C files, including the date 
-changes were made. (We recommend you provide URIs to the location from which 
-the code is derived.) 
-
-THIS SOFTWARE AND DOCUMENTATION IS PROVIDED "AS IS," AND COPYRIGHT HOLDERS 
-MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT L
-IMITED TO, WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR 
-PURPOSE OR THAT THE USE OF THE SOFTWARE OR DOCUMENTATION WILL NOT INFRINGE 
-ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS. 
-
-COPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR 
-CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENTATION. 
-
-The name and trademarks of copyright holders may NOT be used in advertising 
-or publicity pertaining to the software without specific, written prior 
-permission. 
-
-Title to copyright in this software and any associated documentation will at 
-all times remain with copyright holders. 

Copied: trunk/fellowiki/third_party/w3c/LICENSE (from rev 1, trunk/fellowiki/third_party/w3c/LICENCE)

Modified: trunk/fellowiki/util/__init__.py
===================================================================
--- trunk/fellowiki/util/__init__.py	2006-03-01 00:22:03 UTC (rev 1)
+++ trunk/fellowiki/util/__init__.py	2006-03-05 17:06:53 UTC (rev 2)
@@ -17,3 +17,14 @@
 # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 # FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 # DEALINGS IN THE SOFTWARE.
+
+"""fellowiki utility package
+
+This utility package doesn't do anything special, it's just there to contain
+the subpackages:
+
+    - assorted: should read "unsorted" ;-) TODO: Sort. Sort of. Ish. 
+    
+"""
+
+__revision__ = "$Revision:$"

Modified: trunk/fellowiki/util/assorted.py
===================================================================
--- trunk/fellowiki/util/assorted.py	2006-03-01 00:22:03 UTC (rev 1)
+++ trunk/fellowiki/util/assorted.py	2006-03-05 17:06:53 UTC (rev 2)
@@ -18,40 +18,93 @@
 # FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 # DEALINGS IN THE SOFTWARE.
 
-import re,copy
-from elementtree.ElementTree import Element, tostring
+"""fellowiki assorted utilities
 
-def attributesFromDict(d):
-   """Initialize class instance from __init__ arguments
+TODO: overview
 
-      Taken from Python Cookbook, 2nd edition, recipe 6.18
-   """
+assorted should read "unsorted" ;-) TODO: Sort. Sort of. Ish. 
+    
+"""
 
-   self = d.pop('self')
-   for n, v in d.iteritems():
-      setattr(self, n, v)
+__revision__ = "$Revision:$"
 
+import re
+import copy
 
-def remove_escaping_backslashes(str):
-   pattern = re.compile(r'\\(.)')
-   return pattern.sub(r'\1',str)
-   
-def save_add(a,b):
-   if b == None:
-      return a
-   elif a == None:
-      return b
-   else:
-      return a+b
+# TODO: howto support CElementTree (portably!, utf8-support?)
 
-def add_element_contents(a, b, ret_type): 
-   ret = Element(ret_type)
-   if len(a) == 0:
-      ret.text = save_add(a.text,b.text)
-      ret[:] = b[:]
-   else:
-      last_sub = copy.copy(a[len(a)-1])
-      last_sub.tail = save_add(last_sub.tail, b.text)
-      ret.text = a.text
-      ret[:] = a[:-1] + [last_sub] + b[:]
-   return ret
+from elementtree.ElementTree import Element
+
+def attributes_from_dict(dict_):
+    """initialize class instance from __init__ arguments
+
+        Taken from Python Cookbook, 2nd edition, recipe 6.18 
+        TODO: elaborate, license
+        
+    """
+
+    self_ = dict_.pop('self')
+    for name, value in dict_.iteritems():
+        setattr(self_, name, value)
+
+
+def remove_escaping_backslashes(string):
+    """translate string with escaping backslashes to un-escaped version
+    
+    parameters: string: escaped string, may be unicode as well
+    returns: unescaped version of the string
+    
+    This function looks for any occurence of "\." where "." can be any
+    single character and replaces it by the character "." itself.
+    
+    """
+    
+    pattern = re.compile(r'\\(.)') # TODO: don't recompile everytime around
+    return pattern.sub(r'\1', string)
+    
+def save_add(val_1, val_2):
+    """add to values, None being a neutral element to the addition
+    
+    parameters: val_1,
+                val_2: two values to be added
+    returns: val_1 + val_2 iff both aren't None, else the one, that isn't
+             None, or None if both are None
+    throws: whatever may be thrown by adding val_1 and val_2 if both aren't
+            None
+    
+    """
+    if val_2 is None:
+        return val_1
+    elif val_1 is None:
+        return val_2
+    else:
+        return val_1 + val_2
+
+def add_element_contents(etree_1, etree_2, ret_type):
+    """adds the content of to elementtree elements
+    
+    parameters: etree_1,
+                etree_2:  two elementtree.ElementTree.Element instances
+                ret_type: elementtype of the Element instance to be returned
+    returns: new Element instance of type ret_type with the contents of 
+             etree_1 and etree_2 concatenated. If any of the etree_n has a 
+             .tail (i.e. text following the end tag), it (the tail) will be 
+             ignored.
+
+    """
+    
+    # The tricky thing is, that the last text (non-element) content of etree_1
+    # resides in the ".tail" of the last contained element if there is one. 
+    # Otherwise, the ".text" is the only content, therefore it is the last
+    # text content.
+    
+    ret = Element(ret_type)
+    if len(etree_1) == 0:
+        ret.text = save_add(etree_1.text, etree_2.text)
+        ret[:] = etree_2[:]
+    else:
+        last_sub = copy.copy(etree_1[len(etree_1)-1])
+        last_sub.tail = save_add(last_sub.tail, etree_2.text)
+        ret.text = etree_1.text
+        ret[:] = etree_1[:-1] + [last_sub] + etree_2[:]
+    return ret



From fingerle at berlios.de  Sat Mar 11 01:34:28 2006
From: fingerle at berlios.de (fingerle at BerliOS)
Date: Sat, 11 Mar 2006 01:34:28 +0100
Subject: [fellowiki-svncheckins] r4 - in trunk/fellowiki: tests wiki
Message-ID: <200603110034.k2B0YSox032117@sheep.berlios.de>

Author: fingerle
Date: 2006-03-11 01:34:25 +0100 (Sat, 11 Mar 2006)
New Revision: 4

Modified:
   trunk/fellowiki/tests/pylintrc
   trunk/fellowiki/wiki/parser.py
Log:
- fixed pylint messages in wiki.parser
- de-super()-ed wiki.parser (design decision to only use it if really
  nessecary, i.e. with diamond shaped inheritance (not counting object))


Modified: trunk/fellowiki/tests/pylintrc
===================================================================
--- trunk/fellowiki/tests/pylintrc	2006-03-05 17:10:03 UTC (rev 3)
+++ trunk/fellowiki/tests/pylintrc	2006-03-11 00:34:25 UTC (rev 4)
@@ -2,7 +2,7 @@
 # Include message's id in output
 include-ids=yes
 
-disable-msg=I0011, W0142
+disable-msg=I0011, W0142, W0704, W0231, W0201
 
 [VARIABLES]
 # List of variable names used for dummy variables (i.e. not used).

Modified: trunk/fellowiki/wiki/parser.py
===================================================================
--- trunk/fellowiki/wiki/parser.py	2006-03-05 17:10:03 UTC (rev 3)
+++ trunk/fellowiki/wiki/parser.py	2006-03-11 00:34:25 UTC (rev 4)
@@ -1,3 +1,6 @@
+# pylint: disable-msg=W0613,E0201
+# W0702, W0706: allow argument magic (i.e. attributes_from_dict())
+
 # Copyright (c) 2006 Jan Niklas Fingerle
 # 
 # Permission is hereby granted, free of charge, to any person obtaining a
@@ -34,9 +37,17 @@
       
 import sre, re
 
+class WikiError(StandardError):
+    pass
 
+class WikiParserError(WikiError):
+    pass
+
+class WikiTokenError(WikiError):
+    pass
+    
 class Token(object):
-    def __init__(self, scanner, token, cut_right = None, cut_left = None,
+    def __init__(self, token, cut_right = None, cut_left = None,
                      decode_backslash = False, preference = None, **attr_dict):
         attributes_from_dict(dict(locals().items()+attr_dict.items()))
         try:
@@ -62,7 +73,7 @@
     
     def fold_results(self, result, tokens):
         new_token = ResultToken()
-        while len(result) > 0 and (self.preference <> None and 
+        while len(result) > 0 and (self.preference != None and 
                 (result[-1].preference > self.preference
                 or self.preference < 0
                 or len(result) > 1 and result[-1].preference == None
@@ -74,20 +85,20 @@
         return new_token
     
     def evaluate(self, result, tokens, new_token):
-        while len(result) > 0 and self.preference <> None and \
+        while len(result) > 0 and self.preference is not None and \
                 (result[-1].preference > self.preference
                 or self.preference < 0
-                or self.match_is_open() and (result[-1].preference == None or
+                or self.match_is_open() and (result[-1].preference is None or
                 result[-1].preference >= self.preference)):
             res = result.pop()
             if self.close_matching(res):
-                tokens.insert(0,self.close(res, new_token))
+                tokens.insert(0, self.close(res, new_token))
                 return
             else:
                 new_token.prepend_element_contents(res.render())
                 
         result.append(new_token)
-        if self.preference >= 0 or self.preference == None:
+        if self.preference >= 0 or self.preference is None:
             result.append(self)
 
 class ResultToken(Token):
@@ -117,7 +128,7 @@
 class TextToken(Token):
     def render(self):
         xhtml = Element('div')
-        xhtml.text = re.sub('[ \n\t]+',' ',self.text)
+        xhtml.text = re.sub('[ \n\t]+', ' ', self.text)
         return xhtml
 
 class EmbeddedTextToken(Token):
@@ -139,21 +150,20 @@
     def evaluate(self, result, tokens, new_token):
         if self.type == '(':
             self.is_nested_wiki = bool(self.open_wiki_markup.get(self.text, 
-                                                                                  False))
+                                                                 False))
             self.is_nested_html = bool(self.open_html_markup.get(self.html_tag,
-                                                                            False))
+                                                                 False))
             self.open_wiki_markup[self.text] = \
-                                            self.open_wiki_markup.get(self.text, 0) + 1
+                                self.open_wiki_markup.get(self.text, 0) + 1
             self.open_html_markup[self.html_tag] = \
-                                      self.open_html_markup.get(self.html_tag, 0) + 1
+                                self.open_html_markup.get(self.html_tag, 0) + 1
 #          if self.type == '_' and self.open_wiki_markup.get(self.text, False):
-#              self.is_valid_middle_element = markers.get(self.input_marker+'~_',
-#                                                                        False)
+#              self.is_valid_middle_element = \ 
+#                            markers.get(self.input_marker+'~_',False)
 #                markers[self.input_marker+'~_'] = True
         if self.type == ')':
             self.second_content = None
-        super(EncapsulateToken, self).evaluate(result, tokens, 
-                                                                          new_token)
+        Token.evaluate(result, tokens, new_token)
         
     def match_is_open(self):
         if self.type == ')':
@@ -179,24 +189,24 @@
     def close(self, match, new_token):
         if match.type == '(':
             match.open_wiki_markup[match.text] = \
-                                         match.open_wiki_markup.get(match.text, 0) - 1
+                            match.open_wiki_markup.get(match.text, 0) - 1
             match.open_html_markup[match.html_tag] = \
-                                    match.open_html_markup.get(match.html_tag, 0) - 1
+                            match.open_html_markup.get(match.html_tag, 0) - 1
             self.type = '*'
             self.do_close(match, new_token, self.second_content)
         #elif self.type == '_' and markers[self.input_marker]:
         #    markers[match.input_marker+'~_'] = False
         #    self.second_content = new_token
         else:
-            raise "CloseWhereNotAllowedException" ### TODO
+            raise WikiTokenError("'close' where not allowed")
         return self
     
     def gets_eaten(self):
         if self.type == '(':
             self.open_wiki_markup[self.text] = \
-                                         self.open_wiki_markup.get(self.text, 0) - 1
+                                self.open_wiki_markup.get(self.text, 0) - 1
             self.open_html_markup[self.html_tag] = \
-                                    self.open_html_markup.get(self.html_tag, 0) - 1
+                                self.open_html_markup.get(self.html_tag, 0) - 1
 
 class EncapsulateMarkupToken(EncapsulateToken):
     special_markup = {'/': ('em', 'italic'),
@@ -208,11 +218,10 @@
                             '^': ('div', 'superscript'),
                             ',': ('div', 'subscript'),
                             '#': ('div', 'large'),
-                            '~': ('div', 'small')}; # TODO: check for correct markup
+                            '~': ('div', 'small')}; # TODO: check markup
     
-    def __init__(self, scanner, token, *p, **k):
-        super(EncapsulateMarkupToken,self).__init__(scanner, 
-                                                                                 token, *p, **k)
+    def __init__(self, token, *args, **kwargs):
+        EncapsulateToken.__init__(self, token, *args, **kwargs)
         self.html_tag = self.special_markup[self.text][0]
 
     def render(self):
@@ -227,8 +236,7 @@
         return xhtml
         
     def do_close(self, match, new_token, second_content):
-        if second_content <> None:
-            raise "EncapsulateMarkupException" ## TODO
+        assert(second_content is not None)
         
         self.content = new_token.xhtml
             
@@ -242,19 +250,17 @@
             else:
                 self.type = '('
             
-        super(SwitchMarkupToken, self).evaluate(result, tokens, 
-                                                                            new_token)
+        EncapsulateMarkupToken.evaluate(result, tokens, new_token)
 
 class StructureToken(Token):
     ## all Structure is equal and should be of preference 0
     open_structure_list = []
-    def __init__(self, scanner, token, *p, **k):
-        super(StructureToken,self).__init__(scanner, token, *p, **k)
+    def __init__(self, token, *args, **kwargs):
+        Token.__init__(self, token, *args, **kwargs)
         self.xhtml = Element('div')
 
     def evaluate(self, result, tokens, new_token):
-        super(StructureToken, self).evaluate(result, tokens, 
-                                                                          new_token)
+        Token.evaluate(self, result, tokens, new_token)
         if not self.match_is_open:
             self.open_structure_list.append(self.html_tag)
         
@@ -273,7 +279,8 @@
         new_token.xhtml.tag = self.html_tag
         match.xhtml.append(new_token.xhtml)
         while len(self.open_structure_list) > 0:
-          if self.open_structure_list.pop() == self.html_tag: break
+            if self.open_structure_list.pop() == self.html_tag: 
+                break
         return match
         
     def render(self):
@@ -291,115 +298,118 @@
                                   ',': ('valign', 'down')}
 
 
-class PrefixToken(Token): pass
-class HeadlineToken(PrefixToken): pass
-class ListToken(EncapsulateToken): pass
+class PrefixToken(Token): 
+    pass
+class HeadlineToken(PrefixToken): 
+    pass
+class ListToken(EncapsulateToken): 
+    pass
+class LinkToken(EncapsulateToken): 
+    pass
+class EmbeddedLinkToken(LinkToken): 
+    pass
+class MacroToken(LinkToken): 
+    pass
+class TableToken(EncapsulateToken): 
+    pass
 
-class LinkToken(EncapsulateToken): pass
-class EmbeddedLinkToken(LinkToken): pass
-class MacroToken(LinkToken): pass
-    
-    
-class TableToken(EncapsulateToken): pass
-
-
-
-
+def token_factory(token_cls, *args, **kw_args):
+    def new_token(_, token):
+        return token_cls(*((token,)+args), **kw_args)
+    return new_token    
+        
 class WikiParser(object):
-    def token(Token, *args, **kw_args):
-        def new_token(scanner, token):
-            return Token(*((scanner, token)+args), **kw_args)
-        return new_token    
+    regexes = [# escaped text, no wiki tags:
+              (10, r'\[%([^\\%\[]|\\.|%[^\\\]])*%\]', token_factory(TextToken, 
+                     cut_left=2, 
+                     cut_right=2, decode_backslash = True)),
+              # escaped text, preformatted:
+              (10, r'\[@([^\\@\[]|\\.|@[^\\\]])*@\]', 
+                     token_factory(EmbeddedTextToken,
+                     preference = 0, html_tag='pre',
+                     cut_left=2, cut_right=2, 
+                     decode_backslash = True)),
+              # escaped single character:
+              (10, r'\\.', token_factory(TextToken, cut_left=1)),
+              # line break in output
+              (20, r'([ \n\t]*\n%%%%%*[ \n\t]*)+\n',
+                     token_factory(SingleToken, preference=10, html_tag='br')),
+              # paragraph break
+              (30, r'\n[ \n\t]*\n', token_factory(StructureToken,
+                     preference = 0, html_tag='p')),
+              # line break in input (non-printable)
+              (40, r'\n', token_factory(TextToken, preference=20)),
+              # include link start
+              (10, r'\[\[\[', token_factory(EmbeddedLinkToken, type='(', 
+                     preference=20)),
+              # include link stop
+              (10, r'\]\]\]', token_factory(EmbeddedLinkToken, type=')', 
+                     preference=20)),
+              # link start
+              (20, r'\[\[', token_factory(LinkToken, type='(', preference=20)),
+              # link stop
+              (20, r'\]\]', token_factory(LinkToken, type=')', preference=20)),
+              # link rename
+              (20, r'[ \t]>>[ \t]', token_factory(LinkToken, type='_', 
+                     preference=20)),
+              # special enclosing markup
+              (90, r'[/\*_=]', token_factory(SwitchMarkupToken, preference=40)),
+              (10, r'\[[/\*_=\'"^,#~]', token_factory(EncapsulateMarkupToken, 
+                    type='(', preference=20, cut_left=1)),
+              (10, r'[/\*_=\'"^,#~]\]', token_factory(EncapsulateMarkupToken, 
+                    type=')', preference=20, cut_right=1)),
 
+              # modifiers
+              (10, r'<[:()^,]>', token_factory(StructureModifyToken, 
+                    cut_left=1, cut_right=1)),
+              # headlines
+              (10, r'\n={1,6}[ \t]', token_factory(HeadlineToken, 
+                    preference=10)),
+              # lists
+              (10, r'\n[#*-]+[ \t]', token_factory(ListToken, preference=10)),
+              # tables
+              (10, r'\n\|', token_factory(TableToken, type='(', preference=0)),
+              (10, r'\|(?=\n)', token_factory(TableToken, type=')', 
+                    preference=0)),
+              (90, r'\|', token_factory(TableToken, type='_', preference=0)),
+              # macros
+              (10, r'\{\{', token_factory(MacroToken, type='(', preference=20)),
+              (10, r'\}\}', token_factory(MacroToken, type=')', preference=20)),
+              # n-dash and m-dash
+              (20, r'--', token_factory(TextToken, new_text=u'\u2013')),
+              (20, r'---', token_factory(TextToken, new_text=u'\u2014')),
+              # horizontal rule
+              (10, r'\n----(?=\n)', token_factory(SingleToken, preference=0, 
+                     html_tag='hr')),
+              # what's left 
+              (90, r'[ \t]', token_factory(TextToken, preference=30)),
+              (99, r'.', token_factory(TextToken))
+              ]
 
-    regexes = [### escaped text, no wiki tags:
-                  (10, r'\[%([^\\%\[]|\\.|%[^\\\]])*%\]', token(TextToken, 
-                         cut_left=2, 
-                         cut_right=2, decode_backslash = True)),
-                  ### escaped text, preformatted:
-                  (10, r'\[@([^\\@\[]|\\.|@[^\\\]])*@\]', token(EmbeddedTextToken,
-                         preference = 0, html_tag='pre',
-                         cut_left=2, cut_right=2, 
-                         decode_backslash = True)),
-                  ### escaped single character:
-                  (10, r'\\.', token(TextToken, cut_left=1)),
-                  ### line break in output
-                  (20, r'([ \n\t]*\n%%%%%*[ \n\t]*)+\n',
-                         token(SingleToken, preference=10, html_tag='br')),
-                  ### paragraph break
-                  (30, r'\n[ \n\t]*\n', token(StructureToken,
-                         preference = 0, html_tag='p')),
-                  ### line break in input (non-printable)
-                  (40, r'\n', token(TextToken, preference=20)),
-                  ### include link start
-                  (10, r'\[\[\[', token(EmbeddedLinkToken, type='(', 
-                         preference=20)),
-                  ### include link stop
-                  (10, r'\]\]\]', token(EmbeddedLinkToken, type=')', 
-                         preference=20)),
-                  ### link start
-                  (20, r'\[\[', token(LinkToken, type='(', preference=20)),
-                  ### link stop
-                  (20, r'\]\]', token(LinkToken, type=')', preference=20)),
-                  ### link rename
-                  (20, r'[ \t]>>[ \t]', token(LinkToken, type='_', 
-                         preference=20)),
-                  ### special enclosing markup
-                  (90, r'[/\*_=]', token(SwitchMarkupToken, preference=40)),
-                  (10, r'\[[/\*_=\'"^,#~]', token(EncapsulateMarkupToken, type='(',
-                         preference=20, cut_left=1)),
-                  (10, r'[/\*_=\'"^,#~]\]', token(EncapsulateMarkupToken, type=')',
-                         preference=20, cut_right=1)),
-
-                  ### modifiers
-                  (10, r'<[:()^,]>', token(StructureModifyToken, cut_left=1, 
-                         cut_right=1)),
-                  ### headlines
-                  (10, r'\n={1,6}[ \t]', token(HeadlineToken, preference=10)),
-                  ### lists
-                  (10, r'\n[#*-]+[ \t]', token(ListToken, preference=10)),
-                  ### tables
-                  (10, r'\n\|', token(TableToken, type='(', preference=0)),
-                  (10, r'\|(?=\n)', token(TableToken, type=')', preference=0)),
-                  (90, r'\|', token(TableToken, type='_', preference=0)),
-                  ### macros
-                  (10, r'\{\{', token(MacroToken, type='(', preference=20)),
-                  (10, r'\}\}', token(MacroToken, type=')', preference=20)),
-                  ### n-dash and m-dash
-                  (20, r'--', token(TextToken, new_text=u'\u2013')),
-                  (20, r'---', token(TextToken, new_text=u'\u2014')),
-                  ### horizontal rule
-                  (10, r'\n----(?=\n)', token(SingleToken, preference=0, 
-                         html_tag='hr')),
-                  ### what's left 
-                  (90, r'[ \t]', token(TextToken, preference=30)),
-                  (99, r'.', token(TextToken))
-                 ]
-
     def __init__(self):
         regexes = self.regexes[:]
         regexes.sort()
-        regexes = [(b,c) for (a,b,c) in regexes]
+        regexes = [(rex, callback) for (_, rex, callback) in regexes]
         self.scanner = sre.Scanner(regexes)
 
     def parse(self, text):
-        tokens = self.scanner.scan(''.join(['\n\n',text,'\n\n']))
+        tokens = self.scanner.scan(''.join(['\n\n', text, '\n\n']))
         
-        if tokens[1] <> '':
-            raise 'ParserException' ## TODO: Exception
+        if tokens[1] != '':
+            raise WikiParserError('WikiParser error in "%s"' % text)
         
-        tokens=tokens[0]
+        tokens = tokens[0]
         tokens.append(EndToken())
         result = []
         
         while len(tokens) > 0:
             token = tokens.pop(0)
-            token.evaluate(result, tokens, token.fold_results(result,tokens))
+            token.evaluate(result, tokens, token.fold_results(result, tokens))
         
-        if len(tokens) <> 0:
-            raise 'ParserException' ## TODO: Exception
-        if len(result) <> 1:
-            raise 'ParserException' ## TODO: Exception
+        if len(tokens) != 0:
+            raise WikiParserError('WikiParser error in "%s"' % text)
+        if len(result) != 1:
+            raise WikiParserError('WikiParser error in "%s"' % text)
             
         xhtml_tree = result[0].xhtml
         



From fingerle at berlios.de  Sun Mar 12 12:51:08 2006
From: fingerle at berlios.de (fingerle at BerliOS)
Date: Sun, 12 Mar 2006 12:51:08 +0100
Subject: [fellowiki-svncheckins] r5 - trunk/fellowiki/tests/wiki
Message-ID: <200603121151.k2CBp82P019555@sheep.berlios.de>

Author: fingerle
Date: 2006-03-12 12:51:06 +0100 (Sun, 12 Mar 2006)
New Revision: 5

Modified:
   trunk/fellowiki/tests/wiki/ut_wikiparser.py
Log:
- changed test runner for wiki parser to only generate missing xml only in
  case of failures, but not in case of errors


Modified: trunk/fellowiki/tests/wiki/ut_wikiparser.py
===================================================================
--- trunk/fellowiki/tests/wiki/ut_wikiparser.py	2006-03-11 00:34:25 UTC (rev 4)
+++ trunk/fellowiki/tests/wiki/ut_wikiparser.py	2006-03-12 11:51:06 UTC (rev 5)
@@ -82,9 +82,9 @@
         The function parses the file <fname>.wiki and compares the result to 
         the content of <fname>.<tc_extension>.xml. 
         
-        If the unit test fails or leads to an error, an attempt is made, to 
-        write <fname>.<tc_extension>.generated.xml. If this write attempt 
-        fails, it does so silently. 
+        If the unit test fails (but not in case of errors), an attempt is 
+        made, to write <fname>.<tc_extension>.generated.xml. If this write 
+        attempt fails, it does so silently. 
         In any case the original fail or error (that occured before the 
         writing attempt) will be raised to the caller (i.e. the unit test 
         "test runner").
@@ -124,10 +124,10 @@
             self._assert_etrees(xhtml_tree, xhtml_tree_wiki_ext_cononical)
             self.xhtml_validator.parse_resource(xhtml_fn) # validate as XHTML
             
-        except:
+        except self.failureException, ex_val:
             # I want to re-raise *this* exception with full traceback, even if I
             # get another one inbetween
-            (ex_type, ex_val, ex_tb) = sys.exc_info()
+            ex_tb = sys.exc_info()[-1]
             try:
                 gen_file = codecs.open('%s.%s.generated.xml' % 
                              (fname, tc_extension), 'w+','utf8')
@@ -135,7 +135,7 @@
                 gen_file.close
             except:
                 pass # it's only debug output after all
-            raise ex_type, ex_val, ex_tb 
+            raise self.failureException, ex_val, ex_tb 
     return new_test_func
     
 def make_wiki_test_suite(tc_extension, 



From fingerle at berlios.de  Sun Mar 12 12:51:58 2006
From: fingerle at berlios.de (fingerle at BerliOS)
Date: Sun, 12 Mar 2006 12:51:58 +0100
Subject: [fellowiki-svncheckins] r6 - trunk/fellowiki/tests/wiki
Message-ID: <200603121151.k2CBpwUM019778@sheep.berlios.de>

Author: fingerle
Date: 2006-03-12 12:51:39 +0100 (Sun, 12 Mar 2006)
New Revision: 6

Added:
   trunk/fellowiki/tests/wiki/ut_parser.py
Removed:
   trunk/fellowiki/tests/wiki/ut_wikiparser.py
Log:
- moved ut_wikiparser to ut_parser


Copied: trunk/fellowiki/tests/wiki/ut_parser.py (from rev 5, trunk/fellowiki/tests/wiki/ut_wikiparser.py)

Deleted: trunk/fellowiki/tests/wiki/ut_wikiparser.py
===================================================================
--- trunk/fellowiki/tests/wiki/ut_wikiparser.py	2006-03-12 11:51:06 UTC (rev 5)
+++ trunk/fellowiki/tests/wiki/ut_wikiparser.py	2006-03-12 11:51:39 UTC (rev 6)
@@ -1,238 +0,0 @@
-# pylint: disable-msg=W0702,W0706
-# W0702, W0706: allow exception handling scheme in new_test_func
-
-# Copyright (c) 2006 Jan Niklas Fingerle
-# 
-# Permission is hereby granted, free of charge, to any person obtaining a
-# copy of this software and associated documentation files (the "Software"),
-# to deal in the Software without restriction, including without limitation
-# the rights to use, copy, modify, merge, publish, distribute, sublicense,
-# and/or sell copies of the Software, and to permit persons to whom the
-# Software is furnished to do so, subject to the following conditions:
-#
-# The above copyright notice and this permission notice shall be included in
-# all copies or substantial portions of the Software.
-#
-# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
-# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-# DEALINGS IN THE SOFTWARE.
-
-# XHTML validating inspired by Cookbook, recipe 12.8 TODO: elaborate
-
-"""unit tests for the classmates wiki parser
-
-The unit test suite  for the classmates wiki parser is made available through 
-the "suite()" function.
-    
-The function "make_wiki_test_suite()" may be used to implement unit test for 
-extensions to the classmates wiki parser.
-
-"""
-
-__revision__ = "$Revision:$"
-
-import unittest
-import codecs
-import sys
-
-from os.path import dirname, isdir, splitext, join, abspath, basename
-from os import listdir
-from elementtree.ElementTree import tostring, fromstring, Element, SubElement
-from xml.parsers.xmlproc import xmlval, utils, xmldtd
-
-from fellowiki.wiki.parser import WikiParser
-
-# Pre-load the xhtml DTD once, since reloading for each xmlproc
-# would be a major performance hit.
-_xhtml_dtd = xmldtd.load_dtd(join(dirname(abspath(__file__)), '..', '..',
-                                  'third_party', 'w3c', 'xhtml1-strict.dtd'))
-    
-def _make_new_test_func(fname, tc_extension):
-    """generate a new test function to be used in our unit tests
-    
-    parameters: fname:        fully qualified filename, but without file 
-                              extension, to generate the test case from
-                tc_extension: extension name of the test case, refer to 
-                              new_test_func for exact desciption
-    returns: test function for the new test case. The test funcion takes
-             one argument, self, and is to be used as a method of WikiTestCase.
-    throws: nothing to be expected
-
-    The returned test function is always "the same", with the one exception
-    that it uses different "fname" and "tc_extension" values (i.e. it's a
-    closure).
-
-    """
-
-    def new_test_func(self):
-        """test translation of one wiki markup string
-        
-        parameters: self: instance of WikiTestCase
-        returns: nothing
-        throws: whatever exceptions occur during parsing of the wiki text
-                and exceptions used by the unittest framework to signal 
-                test failure
-        bound to (closure): "fname" and "tc_extension" from the surrounding 
-                            scope
-        
-        The function parses the file <fname>.wiki and compares the result to 
-        the content of <fname>.<tc_extension>.xml. 
-        
-        If the unit test fails (but not in case of errors), an attempt is 
-        made, to write <fname>.<tc_extension>.generated.xml. If this write 
-        attempt fails, it does so silently. 
-        In any case the original fail or error (that occured before the 
-        writing attempt) will be raised to the caller (i.e. the unit test 
-        "test runner").
-        
-        """
-        
-        try:
-            # parse wiki text to XML tree
-            wiki_file = codecs.open('%s.wiki' % fname, 'r', 'utf8')
-            wiki_text = wiki_file.read()
-            wiki_file.close()
-            xhtml_tree_wiki = self.parser.parse(wiki_text)
-            
-            # 'extend' tree to a complete XML tree
-            xhtml_tree_wiki_ext = Element('html', 
-                                          xmlns='http://www.w3.org/1999/xhtml')
-            head = SubElement(xhtml_tree_wiki_ext,'head')
-            SubElement(head,'title')
-            body = SubElement(xhtml_tree_wiki_ext,'body')
-            body.append(xhtml_tree_wiki)
-            
-            # do one 'round trip' to get a canonical form
-            xhtml_text_wiki_ext = tostring(xhtml_tree_wiki_ext)
-            xhtml_tree_wiki_ext_cononical = fromstring(xhtml_text_wiki_ext)
-            
-            # read expected XML tree from file
-            try:
-                xhtml_fn = '%s.%s.xml' % (fname, tc_extension)
-                xhtml_file = codecs.open(xhtml_fn, 'r', 'utf8')
-                xhtml_text = xhtml_file.read()
-                xhtml_file.close()
-            except IOError:
-                self.fail('Could not open XML file "%s"' % xhtml_fn)
-            xhtml_tree = fromstring(xhtml_text)
-            
-            # and now for the tests
-            self._assert_etrees(xhtml_tree, xhtml_tree_wiki_ext_cononical)
-            self.xhtml_validator.parse_resource(xhtml_fn) # validate as XHTML
-            
-        except self.failureException, ex_val:
-            # I want to re-raise *this* exception with full traceback, even if I
-            # get another one inbetween
-            ex_tb = sys.exc_info()[-1]
-            try:
-                gen_file = codecs.open('%s.%s.generated.xml' % 
-                             (fname, tc_extension), 'w+','utf8')
-                gen_file.write(xhtml_text_wiki_ext)
-                gen_file.close
-            except:
-                pass # it's only debug output after all
-            raise self.failureException, ex_val, ex_tb 
-    return new_test_func
-    
-def make_wiki_test_suite(tc_extension, 
-                         tc_name = None, tc_path = 
-                         join(dirname(abspath(__file__)),'tests'), **kwargs):
-    """generate a new wiki test suite for unit testing
-    
-    parameters: tc_extension: extension for XML file names ("<fname>.wiki" will
-                              be compared to <fname>.<tc_extension>.xml)
-                tc_name:      suffix for the test case classes name (will be
-                              "WikiTestCase_<tc_name>"). If None (default), 
-                              tc_extension will be used.
-                tc_path:      directory, where to look for *.wiki and *.xml 
-                              files. Defaults to subdirectory "tests" of the 
-                              directory where this file is located.
-                **kwargs:     Any additional keyword arguments are passed to 
-                              the wiki parser's __init__() method.
-    returns: an instance of unittest.TestSuite
-    throws: nothing to be expected
-     
-    Test cases and test suites are generated "the normal way" from classes. 
-    Therefore the test case classes must be generated dynamically. In the end
-    the internal structure of the test suites is more like normal test cases
-    than if we had built the suites ourselves.
-       
-    """
-    
-    if tc_name == None:
-        tc_name = tc_extension        
-    
-    class WikiTestCase(unittest.TestCase):
-        """test case for the wiki parser"""
-        
-        def _assert_etrees(self, etree_1, etree_2):
-            """assert that two ElementTrees are equal
-            
-            parameters: self:    instance of subclass of unittest.TestCase
-                        etree_1, 
-                        etree2:  two ElementTrees
-            
-            """
-            
-            self.assertEqual(etree_1.tag, etree_2.tag)
-            self.assertEqual(etree_1.text, etree_2.text)
-            self.assertEqual(etree_1.tail, etree_2.tail)
-            self.assertEqual(etree_1.attrib, etree_2.attrib)
-            
-            children_1 = etree_1.getchildren()
-            children_2 = etree_2.getchildren()
-            
-            self.assertEqual(len(children_1), len(children_2))
-            for (child_1, child_2) in zip(children_1, children_2):
-                self._assert_etrees(child_1, child_2)
-                
-        def setUp(self): 
-            """set up wiki parser and xhtml validator"""
-            self.parser = WikiParser(**kwargs)
-            # unfortunately I need a new validator each time around (Bug in 
-            # xmlval: part of the old file remains in the buffer)
-            self.xhtml_validator = xmlval.XMLValidator()
-            self.xhtml_validator.set_error_handler(utils.ErrorRaiser(
-                                                          self.xhtml_validator))
-            self.xhtml_validator.val.dtd = self.xhtml_validator.dtd = \
-                                           self.xhtml_validator.ent = _xhtml_dtd
-        
-    WikiTestCase.__name__ = 'WikiTestCase_%s' % tc_name
-    
-    # find test files and subdirectories
-    fnames = listdir(tc_path)
-    fnames = [file_ for file_ in fnames if file_[0:1] != '.'] # no hidden files
-    fnames = [join(tc_path, file_) for file_ in fnames] 
-    files = [splitext(file_)[0] for file_ in fnames 
-                                               if splitext(file_)[1] == '.wiki']
-    dirs = [file_ for file_ in fnames if isdir(file_)]
-    
-    # for every *.wiki file generate a test method
-    for file_ in files:
-        new_test_func = _make_new_test_func(file_, tc_extension)
-        new_test_func.__doc__ = "wiki parser: %s - %s" % \
-                                                      (tc_name, basename(file_))
-        new_test_func.__name__ = tf_name = "test_%s" % basename(file_)
-        setattr(WikiTestCase, tf_name, new_test_func)
-    
-    # generate test suite and add sub-test-suites
-    suite_ = unittest.makeSuite(WikiTestCase)
-    for dir_ in dirs:
-        suite_.addTest(make_wiki_test_suite(tc_extension, 
-                                           tc_name = '%s_%s' %
-                                                      (tc_name, basename(dir_)),
-                                           tc_path = dir_, 
-                                           **kwargs))
-    
-    return suite_
-    
-def suite():
-    """return default unit test suite for this module"""
-    return make_wiki_test_suite('complete')
-
-if __name__ == '__main__':
-    unittest.TextTestRunner(verbosity=2).run(suite())



From fingerle at berlios.de  Sat Mar 18 16:52:50 2006
From: fingerle at berlios.de (fingerle at BerliOS)
Date: Sat, 18 Mar 2006 16:52:50 +0100
Subject: [fellowiki-svncheckins] r7 - pjm trunk/fellowiki/tests/wiki/tests/simple_markup trunk/fellowiki/wiki
Message-ID: <200603181552.k2IFqoZv015817@sheep.berlios.de>

Author: fingerle
Date: 2006-03-18 16:52:44 +0100 (Sat, 18 Mar 2006)
New Revision: 7

Added:
   pjm/pointers
   trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.wiki
Modified:
   trunk/fellowiki/tests/wiki/tests/simple_markup/escaped_text.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/just_text.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/just_text_multiline.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/pre.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/pre.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/special_characters.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/special_chars.complete.xml
   trunk/fellowiki/wiki/parser.py
Log:
- fixed some test cases for the wiki parser (the test case files and the
  wiki parser as appropriate)
- added pointers file in pjm (pointers to libs that we may want to use)


Added: pjm/pointers
===================================================================
--- pjm/pointers	2006-03-12 11:51:39 UTC (rev 6)
+++ pjm/pointers	2006-03-18 15:52:44 UTC (rev 7)
@@ -0,0 +1,3 @@
+recurring activities: http://projects.amor.org/misc/wiki/Recur
+atom feeds: http://trac.defuze.org/browser/oss/atomixlib
+

Modified: trunk/fellowiki/tests/wiki/tests/simple_markup/escaped_text.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/escaped_text.complete.xml	2006-03-12 11:51:39 UTC (rev 6)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/escaped_text.complete.xml	2006-03-18 15:52:44 UTC (rev 7)
@@ -1 +1 @@
-<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content">[%Escaped text. Escaped text. &lt;&amp;&gt; [%Escaped text.%] \Escaped text. Escaped text.%] [%Escaped text.%]</div></body></html>
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>[%Escaped text. Escaped text. &lt;&amp;&gt; [%Escaped text.%] \Escaped text. Escaped text.%] [%Escaped text.%]</p></div></body></html>

Modified: trunk/fellowiki/tests/wiki/tests/simple_markup/just_text.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/just_text.complete.xml	2006-03-12 11:51:39 UTC (rev 6)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/just_text.complete.xml	2006-03-18 15:52:44 UTC (rev 7)
@@ -1 +1 @@
-<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content">Hello World!</div></body></html>
\ No newline at end of file
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>Hello World!</p></div></body></html>

Modified: trunk/fellowiki/tests/wiki/tests/simple_markup/just_text_multiline.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/just_text_multiline.complete.xml	2006-03-12 11:51:39 UTC (rev 6)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/just_text_multiline.complete.xml	2006-03-18 15:52:44 UTC (rev 7)
@@ -1 +1 @@
-<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content">Hello World! Hello World! Hello World! Hello World!</div></body></html>
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>Hello World! Hello World! Hello World! Hello World!</p></div></body></html>

Modified: trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.complete.xml	2006-03-12 11:51:39 UTC (rev 6)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.complete.xml	2006-03-18 15:52:44 UTC (rev 7)
@@ -1 +1 @@
-<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content">Hello world! %%% Hello world!<br />Hello world!<br />Hello world!</div></body></html>
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>Hello world! %%% Hello world!<br />Hello world!<br />Hello world!</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph.complete.xml	2006-03-12 11:51:39 UTC (rev 6)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph.complete.xml	2006-03-18 15:52:44 UTC (rev 7)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>paragraph 1</p><p>paragraph 2</p></div></body></html>

Modified: trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph.wiki	2006-03-12 11:51:39 UTC (rev 6)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph.wiki	2006-03-18 15:52:44 UTC (rev 7)
@@ -1,4 +1,4 @@
-paragraph 
+paragraph
 1
 
 paragraph

Modified: trunk/fellowiki/tests/wiki/tests/simple_markup/pre.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/pre.complete.xml	2006-03-12 11:51:39 UTC (rev 6)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/pre.complete.xml	2006-03-18 15:52:44 UTC (rev 7)
@@ -1,4 +1,2 @@
-<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content">[@Preformatted text. <pre>Preformatted text. &lt;&amp;&gt;
-[@Preformatted text.@]
-
-\Preformatted text.</pre> Preformatted text.@]</div></body></html>
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><pre>Preformatted text. &lt;&amp;&gt;
+Preformatted text.</pre></div></body></html>

Modified: trunk/fellowiki/tests/wiki/tests/simple_markup/pre.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/pre.wiki	2006-03-12 11:51:39 UTC (rev 6)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/pre.wiki	2006-03-18 15:52:44 UTC (rev 7)
@@ -1,6 +1,2 @@
-[@Preformatted text.
 [@Preformatted text. <&>
-\[@Preformatted text.\@]
-
-\\\Preformatted text.@]
 Preformatted text.@]

Copied: trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.complete.xml (from rev 4, trunk/fellowiki/tests/wiki/tests/simple_markup/pre.complete.xml)
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/pre.complete.xml	2006-03-11 00:34:25 UTC (rev 4)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.complete.xml	2006-03-18 15:52:44 UTC (rev 7)
@@ -0,0 +1,4 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>[@Preformatted text. </p><pre>Preformatted text. &lt;&amp;&gt;
+[@Preformatted text.@]
+
+\Preformatted text.</pre><p> Preformatted text.@]</p></div></body></html>

Copied: trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.wiki (from rev 4, trunk/fellowiki/tests/wiki/tests/simple_markup/pre.wiki)

Modified: trunk/fellowiki/tests/wiki/tests/simple_markup/special_characters.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/special_characters.wiki	2006-03-12 11:51:39 UTC (rev 6)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/special_characters.wiki	2006-03-18 15:52:44 UTC (rev 7)
@@ -1 +1,8 @@
-TODO: n-dash, m-dash
+n--dash
+n --dash
+n-- dash
+n -- dash
+m---dash
+m ---dash
+m--- dash
+m --- dash

Modified: trunk/fellowiki/tests/wiki/tests/simple_markup/special_chars.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/special_chars.complete.xml	2006-03-12 11:51:39 UTC (rev 6)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/special_chars.complete.xml	2006-03-18 15:52:44 UTC (rev 7)
@@ -1 +1 @@
-<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content">&lt;&amp;&gt;</div></body></html>
\ No newline at end of file
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>&lt;&amp;&gt;</p></div></body></html>

Modified: trunk/fellowiki/wiki/parser.py
===================================================================
--- trunk/fellowiki/wiki/parser.py	2006-03-12 11:51:39 UTC (rev 6)
+++ trunk/fellowiki/wiki/parser.py	2006-03-18 15:52:44 UTC (rev 7)
@@ -94,6 +94,7 @@
             if self.close_matching(res):
                 tokens.insert(0, self.close(res, new_token))
                 return
+            # TODO: is
             else:
                 new_token.prepend_element_contents(res.render())
                 
@@ -131,7 +132,7 @@
         xhtml.text = re.sub('[ \n\t]+', ' ', self.text)
         return xhtml
 
-class EmbeddedTextToken(Token):
+class BetweenParagraphsToken(Token):
     def render(self):
         xhtml = Element('div')
         new_token = SubElement(xhtml, self.html_tag)
@@ -163,7 +164,7 @@
 #                markers[self.input_marker+'~_'] = True
         if self.type == ')':
             self.second_content = None
-        Token.evaluate(result, tokens, new_token)
+        Token.evaluate(self, result, tokens, new_token)
         
     def match_is_open(self):
         if self.type == ')':
@@ -212,7 +213,7 @@
     special_markup = {'/': ('em', 'italic'),
                             '*': ('b', 'bold'),
                             '_': ('em', 'underline'),
-                            '=': ('tt', 'typewriter'),
+                            '=': ('tt', 'typewriter'), 
                             "'": ('div', 'single_quotes'),
                             '"': ('div', 'double_quotes'),
                             '^': ('div', 'superscript'),
@@ -250,43 +251,42 @@
             else:
                 self.type = '('
             
-        EncapsulateMarkupToken.evaluate(result, tokens, new_token)
+        EncapsulateMarkupToken.evaluate(self, result, tokens, new_token)
+    def do_close(self,match, new_token, second_content): 
+        self.content = new_token.xhtml # TODO: this is only a DEBUG fix
 
-class StructureToken(Token):
-    ## all Structure is equal and should be of preference 0
-    open_structure_list = []
+class ParagraphToken(Token):
     def __init__(self, token, *args, **kwargs):
         Token.__init__(self, token, *args, **kwargs)
         self.xhtml = Element('div')
 
     def evaluate(self, result, tokens, new_token):
         Token.evaluate(self, result, tokens, new_token)
-        if not self.match_is_open:
-            self.open_structure_list.append(self.html_tag)
         
     def match_is_open(self):
-        try:
-            self.open_structure_list.index(self.html_tag)
-            return True
-        except ValueError:
-            return False
+        return True
     
     def close_matching(self, match):
         return     isinstance(self, match.__class__) \
                  or isinstance(match, self.__class__)
             
     def close(self, match, new_token):
-        new_token.xhtml.tag = self.html_tag
-        match.xhtml.append(new_token.xhtml)
-        while len(self.open_structure_list) > 0:
-            if self.open_structure_list.pop() == self.html_tag: 
-                break
+        if len(new_token.xhtml) != 0 or new_token.xhtml.text is not None \
+                                     or new_token.xhtml.tail is not None:
+           new_token.xhtml.tag = 'p'
+           match.xhtml.append(new_token.xhtml)
         return match
         
     def render(self):
         return self.xhtml
             
 
+class BetweenParagraphsToken(ParagraphToken):
+    def close(self, match, new_token):
+        match_ = ParagraphToken.close(self, match, new_token)
+        embed = SubElement(match_.xhtml, self.html_tag)
+        embed.text = self.text
+        return match_
 
 class StructureModifyToken(Token): 
 #modifiziert letzte geoeffnete struktur, wird dann wegfallen lassen => keine
@@ -302,15 +302,17 @@
     pass
 class HeadlineToken(PrefixToken): 
     pass
-class ListToken(EncapsulateToken): 
+    
+    
+class ListToken(PrefixToken): 
     pass
-class LinkToken(EncapsulateToken): 
+class LinkToken(Token): 
     pass
 class EmbeddedLinkToken(LinkToken): 
     pass
 class MacroToken(LinkToken): 
     pass
-class TableToken(EncapsulateToken): 
+class TableToken(Token): 
     pass
 
 def token_factory(token_cls, *args, **kw_args):
@@ -325,7 +327,7 @@
                      cut_right=2, decode_backslash = True)),
               # escaped text, preformatted:
               (10, r'\[@([^\\@\[]|\\.|@[^\\\]])*@\]', 
-                     token_factory(EmbeddedTextToken,
+                     token_factory(BetweenParagraphsToken,
                      preference = 0, html_tag='pre',
                      cut_left=2, cut_right=2, 
                      decode_backslash = True)),
@@ -335,8 +337,8 @@
               (20, r'([ \n\t]*\n%%%%%*[ \n\t]*)+\n',
                      token_factory(SingleToken, preference=10, html_tag='br')),
               # paragraph break
-              (30, r'\n[ \n\t]*\n', token_factory(StructureToken,
-                     preference = 0, html_tag='p')),
+              (30, r'\n[ \n\t]*\n', token_factory(ParagraphToken,
+                     preference = 0)),
               # line break in input (non-printable)
               (40, r'\n', token_factory(TextToken, preference=20)),
               # include link start
@@ -363,7 +365,7 @@
               (10, r'<[:()^,]>', token_factory(StructureModifyToken, 
                     cut_left=1, cut_right=1)),
               # headlines
-              (10, r'\n={1,6}[ \t]', token_factory(HeadlineToken, 
+              (10, r'^={1,6}[ \t]', token_factory(HeadlineToken, 
                     preference=10)),
               # lists
               (10, r'\n[#*-]+[ \t]', token_factory(ListToken, preference=10)),
@@ -390,7 +392,7 @@
         regexes = self.regexes[:]
         regexes.sort()
         regexes = [(rex, callback) for (_, rex, callback) in regexes]
-        self.scanner = sre.Scanner(regexes)
+        self.scanner = sre.Scanner(regexes, sre.M)
 
     def parse(self, text):
         tokens = self.scanner.scan(''.join(['\n\n', text, '\n\n']))



From fingerle at berlios.de  Mon Mar 20 00:19:10 2006
From: fingerle at berlios.de (fingerle at BerliOS)
Date: Mon, 20 Mar 2006 00:19:10 +0100
Subject: [fellowiki-svncheckins] r8 - in trunk/fellowiki: tests/wiki/tests/simple_markup wiki
Message-ID: <200603192319.k2JNJAfk009408@sheep.berlios.de>

Author: fingerle
Date: 2006-03-20 00:19:08 +0100 (Mon, 20 Mar 2006)
New Revision: 8

Modified:
   trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.complete.xml
   trunk/fellowiki/wiki/parser.py
Log:
- some refactoring of the wiki parser
- some changes for headline token


Modified: trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.complete.xml	2006-03-18 15:52:44 UTC (rev 7)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.complete.xml	2006-03-19 23:19:08 UTC (rev 8)
@@ -1,4 +1,4 @@
-<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>[@Preformatted text. </p><pre>Preformatted text. &lt;&amp;&gt;
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>[@Preformatted text.</p><pre>Preformatted text. &lt;&amp;&gt;
 [@Preformatted text.@]
 
-\Preformatted text.</pre><p> Preformatted text.@]</p></div></body></html>
+\Preformatted text.</pre><p>Preformatted text.@]</p></div></body></html>

Modified: trunk/fellowiki/wiki/parser.py
===================================================================
--- trunk/fellowiki/wiki/parser.py	2006-03-18 15:52:44 UTC (rev 7)
+++ trunk/fellowiki/wiki/parser.py	2006-03-19 23:19:08 UTC (rev 8)
@@ -59,11 +59,10 @@
         if decode_backslash:
             self.text = remove_escaping_backslashes(self.text)
             
-    def render(self):
-        # fixes rendering, called once!
+    def render(self, new_token):
         xhtml = Element('div')
         xhtml.text = self.token
-        return xhtml
+        new_token.prepend_element_contents(xhtml)
         
     def match_is_open(self):
         return False
@@ -71,35 +70,34 @@
     def close_matching(self, match):
         return False
     
-    def fold_results(self, result, tokens):
+    def evaluate(self, result, tokens):
         new_token = ResultToken()
-        while len(result) > 0 and (self.preference != None and 
-                (result[-1].preference > self.preference
-                or self.preference < 0
-                or len(result) > 1 and result[-1].preference == None
-                    and (result[-2].preference == None or 
-                          result[-2].preference > self.preference)
-                ) or self.preference == None and result[-1].preference == None):
+        
+        # fold result set where appropriate (e.g. higher priority) and
+        # close matching "braces"
+        while len(result) > 0 \
+            and (self.preference is not None 
+                    and (result[-1].preference > self.preference 
+                        or self.preference < 0
+                        or len(result) > 1 and result[-1].preference is None 
+                            and (result[-2].preference is None 
+                                or result[-2].preference > self.preference)
+                        or self.match_is_open() 
+                            and (result[-1].preference is None 
+                                or result[-1].preference >= self.preference)) 
+                or self.preference is None 
+                    and result[-1].preference is None):
             res = result.pop()
-            new_token.prepend_element_contents(res.render())
-        return new_token
-    
-    def evaluate(self, result, tokens, new_token):
-        while len(result) > 0 and self.preference is not None and \
-                (result[-1].preference > self.preference
-                or self.preference < 0
-                or self.match_is_open() and (result[-1].preference is None or
-                result[-1].preference >= self.preference)):
-            res = result.pop()
             if self.close_matching(res):
+                # matching braces generate a new token that will be evaluated
+                # as a new token
                 tokens.insert(0, self.close(res, new_token))
                 return
-            # TODO: is
             else:
-                new_token.prepend_element_contents(res.render())
+                res.render(new_token)
                 
         result.append(new_token)
-        if self.preference >= 0 or self.preference is None:
+        if not isinstance(self, EndToken):
             result.append(self)
 
 class ResultToken(Token):
@@ -108,8 +106,8 @@
         self.preference = None
         self.xhtml = Element('div')
         
-    def render(self):
-        return self.xhtml
+    def render(self, new_token):
+        new_token.prepend_element_contents(self.xhtml)
         
     def prepend_element_contents(self, element): 
         self.xhtml = add_element_contents(element, self.xhtml, 'div')
@@ -119,36 +117,42 @@
         attributes_from_dict(locals())
         self.preference = -1
         
-    def render(self):
+    def render(self, new_token):
         xhtml = Element('div')
-        return xhtml
+        new_token.prepend_element_contents(xhtml)
         
     def match_is_open(self):
         return True
 
 class TextToken(Token):
-    def render(self):
+    def render(self, new_token):
         xhtml = Element('div')
         xhtml.text = re.sub('[ \n\t]+', ' ', self.text)
-        return xhtml
-
-class BetweenParagraphsToken(Token):
-    def render(self):
+        new_token.prepend_element_contents(xhtml)
+        
+class LineBreakToken(Token):
+    def render(self, new_token):
+        
         xhtml = Element('div')
-        new_token = SubElement(xhtml, self.html_tag)
-        new_token.text = self.text
-        return xhtml
+        xhtml.text = ' '
+        new_token.prepend_element_contents(xhtml)
+    def evaluate(self, result, tokens):
+        if type(tokens[0]) == LineBreakToken:
+            next_token = tokens.pop(0)
+            tokens.insert(0, ParagraphToken(self.token + next_token.token))
+        else:
+            Token.evaluate(self, result, tokens)
 
 class SingleToken(Token):
-    def render(self):
+    def render(self, new_token):
         xhtml = Element('div')
         SubElement(xhtml, self.html_tag)
-        return xhtml
+        new_token.prepend_element_contents(xhtml)
         
 class EncapsulateToken(Token):
     open_wiki_markup = {}
     open_html_markup = {}
-    def evaluate(self, result, tokens, new_token):
+    def evaluate(self, result, tokens):
         if self.type == '(':
             self.is_nested_wiki = bool(self.open_wiki_markup.get(self.text, 
                                                                  False))
@@ -164,7 +168,7 @@
 #                markers[self.input_marker+'~_'] = True
         if self.type == ')':
             self.second_content = None
-        Token.evaluate(self, result, tokens, new_token)
+        Token.evaluate(self, result, tokens)
         
     def match_is_open(self):
         if self.type == ')':
@@ -225,7 +229,7 @@
         EncapsulateToken.__init__(self, token, *args, **kwargs)
         self.html_tag = self.special_markup[self.text][0]
 
-    def render(self):
+    def render(self, new_token):
         xhtml = Element('div')
         if self.type == '*':
             self.content.tag = self.special_markup[self.text][0]
@@ -234,7 +238,7 @@
         else:
             self.gets_eaten()
             xhtml.text = self.token
-        return xhtml
+        new_token.prepend_element_contents(xhtml)
         
     def do_close(self, match, new_token, second_content):
         assert(second_content is not None)
@@ -243,7 +247,7 @@
             
 class SwitchMarkupToken(EncapsulateMarkupToken):
     open_wiki_markup = {}
-    def evaluate(self, result, tokens, new_token):
+    def evaluate(self, result, tokens):
         if not hasattr(self, 'type'):
             if (bool(self.open_wiki_markup.get(self.text, False)) or
                  bool(self.open_html_markup.get(self.html_tag, False))):
@@ -251,24 +255,21 @@
             else:
                 self.type = '('
             
-        EncapsulateMarkupToken.evaluate(self, result, tokens, new_token)
+        EncapsulateMarkupToken.evaluate(self, result, tokens)
     def do_close(self,match, new_token, second_content): 
         self.content = new_token.xhtml # TODO: this is only a DEBUG fix
 
 class ParagraphToken(Token):
     def __init__(self, token, *args, **kwargs):
         Token.__init__(self, token, *args, **kwargs)
+        self.preference = 0
         self.xhtml = Element('div')
-
-    def evaluate(self, result, tokens, new_token):
-        Token.evaluate(self, result, tokens, new_token)
         
     def match_is_open(self):
         return True
     
     def close_matching(self, match):
-        return     isinstance(self, match.__class__) \
-                 or isinstance(match, self.__class__)
+        return isinstance(match, ParagraphToken)
             
     def close(self, match, new_token):
         if len(new_token.xhtml) != 0 or new_token.xhtml.text is not None \
@@ -277,8 +278,17 @@
            match.xhtml.append(new_token.xhtml)
         return match
         
-    def render(self):
-        return self.xhtml
+    def render(self, new_token):
+        new_token.prepend_element_contents(self.xhtml)
+        
+    def evaluate(self, result, tokens):
+        while type(tokens[0]) == LineBreakToken:
+            next_token = tokens.pop(0)
+            self.token += next_token.token
+        while len (result) >0 and type(result[-1]) == LineBreakToken:
+            previous_result = result.pop()
+            self.token = next_token.token + self.token
+        Token.evaluate(self, result, tokens)
             
 
 class BetweenParagraphsToken(ParagraphToken):
@@ -297,14 +307,14 @@
                                   '^': ('valign', 'up'),
                                   ',': ('valign', 'down')}
 
-
-class PrefixToken(Token): 
-    pass
-class HeadlineToken(PrefixToken): 
-    pass
+class HeadlineToken(Token): 
+    def render(self, new_token):
+        new_token.xhtml.tag = 'h%i' % (len(self.token) - 1)
+        xhtml = Element('div')
+        xhtml.append(new_token.xhtml)
+        new_token.xhtml = xhtml
     
-    
-class ListToken(PrefixToken): 
+class ListToken(Token): 
     pass
 class LinkToken(Token): 
     pass
@@ -336,11 +346,8 @@
               # line break in output
               (20, r'([ \n\t]*\n%%%%%*[ \n\t]*)+\n',
                      token_factory(SingleToken, preference=10, html_tag='br')),
-              # paragraph break
-              (30, r'\n[ \n\t]*\n', token_factory(ParagraphToken,
-                     preference = 0)),
               # line break in input (non-printable)
-              (40, r'\n', token_factory(TextToken, preference=20)),
+              (40, r'[ \t]*\n[ \t]*', token_factory(LineBreakToken, preference=20)),
               # include link start
               (10, r'\[\[\[', token_factory(EmbeddedLinkToken, type='(', 
                      preference=20)),
@@ -357,16 +364,16 @@
               # special enclosing markup
               (90, r'[/\*_=]', token_factory(SwitchMarkupToken, preference=40)),
               (10, r'\[[/\*_=\'"^,#~]', token_factory(EncapsulateMarkupToken, 
-                    type='(', preference=20, cut_left=1)),
+                    type='(', preference=40, cut_left=1)),
               (10, r'[/\*_=\'"^,#~]\]', token_factory(EncapsulateMarkupToken, 
-                    type=')', preference=20, cut_right=1)),
+                    type=')', preference=40, cut_right=1)),
 
               # modifiers
               (10, r'<[:()^,]>', token_factory(StructureModifyToken, 
                     cut_left=1, cut_right=1)),
               # headlines
               (10, r'^={1,6}[ \t]', token_factory(HeadlineToken, 
-                    preference=10)),
+                    preference=30)),
               # lists
               (10, r'\n[#*-]+[ \t]', token_factory(ListToken, preference=10)),
               # tables
@@ -406,7 +413,7 @@
         
         while len(tokens) > 0:
             token = tokens.pop(0)
-            token.evaluate(result, tokens, token.fold_results(result, tokens))
+            token.evaluate(result, tokens)
         
         if len(tokens) != 0:
             raise WikiParserError('WikiParser error in "%s"' % text)



From fingerle at berlios.de  Wed Mar 22 02:06:30 2006
From: fingerle at berlios.de (fingerle at BerliOS)
Date: Wed, 22 Mar 2006 02:06:30 +0100
Subject: [fellowiki-svncheckins] r9 - in trunk/fellowiki: tests/wiki/tests/simple_markup wiki
Message-ID: <200603220106.k2M16U56004733@sheep.berlios.de>

Author: fingerle
Date: 2006-03-22 02:06:18 +0100 (Wed, 22 Mar 2006)
New Revision: 9

Modified:
   trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.wiki
   trunk/fellowiki/wiki/parser.py
Log:
- fixed headline token, hopefully. Working test case can't be added before
  =typewriter= style markup is fixed, since it affects the non-headline 
  tests in the test case.


Modified: trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.wiki	2006-03-19 23:19:08 UTC (rev 8)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.wiki	2006-03-22 01:06:18 UTC (rev 9)
@@ -5,13 +5,28 @@
 ======no headline
 =======no headline
 ========no headline
+
 = Headline 1
+= Headline 1
+
 == Headline 2
+== Headline 2
+
 === Headline 3
+=== Headline 3
+
 ==== Headline 4
+==== Headline 4
+
 ===== Headline 5
+===== Headline 5
+
 ====== Headline 6
+====== Headline 6
+
 ======= no Headline
+======= no Headline
+
 = we don't "close" headlines =
 == we don't "close" headlines ==
 === we don't "close" headlines ===

Modified: trunk/fellowiki/wiki/parser.py
===================================================================
--- trunk/fellowiki/wiki/parser.py	2006-03-19 23:19:08 UTC (rev 8)
+++ trunk/fellowiki/wiki/parser.py	2006-03-22 01:06:18 UTC (rev 9)
@@ -55,7 +55,7 @@
         except TypeError: 
             pass
         self.text = token[cut_left:cut_right]
-
+            
         if decode_backslash:
             self.text = remove_escaping_backslashes(self.text)
             
@@ -70,7 +70,11 @@
     def close_matching(self, match):
         return False
     
-    def evaluate(self, result, tokens):
+    def evaluate(self, result, tokens, state):
+        self.result = result
+        self.tokens = tokens
+        self.state = state
+        
         new_token = ResultToken()
         
         # fold result set where appropriate (e.g. higher priority) and
@@ -91,7 +95,7 @@
             if self.close_matching(res):
                 # matching braces generate a new token that will be evaluated
                 # as a new token
-                tokens.insert(0, self.close(res, new_token))
+                self.close(res, new_token)
                 return
             else:
                 res.render(new_token)
@@ -129,19 +133,6 @@
         xhtml = Element('div')
         xhtml.text = re.sub('[ \n\t]+', ' ', self.text)
         new_token.prepend_element_contents(xhtml)
-        
-class LineBreakToken(Token):
-    def render(self, new_token):
-        
-        xhtml = Element('div')
-        xhtml.text = ' '
-        new_token.prepend_element_contents(xhtml)
-    def evaluate(self, result, tokens):
-        if type(tokens[0]) == LineBreakToken:
-            next_token = tokens.pop(0)
-            tokens.insert(0, ParagraphToken(self.token + next_token.token))
-        else:
-            Token.evaluate(self, result, tokens)
 
 class SingleToken(Token):
     def render(self, new_token):
@@ -152,7 +143,7 @@
 class EncapsulateToken(Token):
     open_wiki_markup = {}
     open_html_markup = {}
-    def evaluate(self, result, tokens):
+    def evaluate(self, result, tokens, state):
         if self.type == '(':
             self.is_nested_wiki = bool(self.open_wiki_markup.get(self.text, 
                                                                  False))
@@ -168,7 +159,7 @@
 #                markers[self.input_marker+'~_'] = True
         if self.type == ')':
             self.second_content = None
-        Token.evaluate(self, result, tokens)
+        Token.evaluate(self, result, tokens, state)
         
     def match_is_open(self):
         if self.type == ')':
@@ -204,7 +195,7 @@
         #    self.second_content = new_token
         else:
             raise WikiTokenError("'close' where not allowed")
-        return self
+        self.tokens.insert(0, self)
     
     def gets_eaten(self):
         if self.type == '(':
@@ -228,26 +219,26 @@
     def __init__(self, token, *args, **kwargs):
         EncapsulateToken.__init__(self, token, *args, **kwargs)
         self.html_tag = self.special_markup[self.text][0]
+        self.xhtml = Element('div')
 
     def render(self, new_token):
-        xhtml = Element('div')
-        if self.type == '*':
-            self.content.tag = self.special_markup[self.text][0]
-            xhtml[:] = [self.content]
-                
-        else:
+        if not self.type == '*':
             self.gets_eaten()
-            xhtml.text = self.token
-        new_token.prepend_element_contents(xhtml)
+            self.xhtml.text = self.token
+        new_token.prepend_element_contents(self.xhtml)
         
     def do_close(self, match, new_token, second_content):
         assert(second_content is not None)
         
-        self.content = new_token.xhtml
+        if new_token.xhtml.text is not None or len(new_token.xhtml) > 0:
+            new_token.xhtml.tag = self.special_markup[self.text][0]
+            self.xhtml[:] = [new_token]
+        else:
+            self.xhtml.text = match.token + self.token
             
 class SwitchMarkupToken(EncapsulateMarkupToken):
     open_wiki_markup = {}
-    def evaluate(self, result, tokens):
+    def evaluate(self, result, tokens, state):
         if not hasattr(self, 'type'):
             if (bool(self.open_wiki_markup.get(self.text, False)) or
                  bool(self.open_html_markup.get(self.html_tag, False))):
@@ -255,13 +246,38 @@
             else:
                 self.type = '('
             
-        EncapsulateMarkupToken.evaluate(self, result, tokens)
+        EncapsulateMarkupToken.evaluate(self, result, tokens, state)
     def do_close(self,match, new_token, second_content): 
         self.content = new_token.xhtml # TODO: this is only a DEBUG fix
 
-class ParagraphToken(Token):
+        
+class LineBreakToken(Token):
+    def render(self, new_token):
+        xhtml = Element('div')
+        xhtml.text = ' '
+        new_token.prepend_element_contents(xhtml)
+        
+    def evaluate(self, result, tokens, state):
+        if type(self) == type(tokens[0]) == LineBreakToken:
+            next_token = tokens.pop(0)
+            tokens.insert(0, ParagraphToken(self.token + next_token.token))
+        else:
+            Token.evaluate(self, result, tokens, state)
+    
+    def match_is_open(self):
+        return self.state.get("prefix_count", 0) > 0
+    
+    def close_matching(self, match):
+        return isinstance(match, PrefixToken)
+        
+    def close(self, match, new_token):
+        self.state["prefix_count"] = self.state.get("prefix_count", 0) - 1
+        match.prefix(new_token)
+        self.tokens.insert(0, self)
+            
+class ParagraphToken(LineBreakToken):
     def __init__(self, token, *args, **kwargs):
-        Token.__init__(self, token, *args, **kwargs)
+        LineBreakToken.__init__(self, token, *args, **kwargs)
         self.preference = 0
         self.xhtml = Element('div')
         
@@ -269,35 +285,48 @@
         return True
     
     def close_matching(self, match):
-        return isinstance(match, ParagraphToken)
+        return isinstance(match, ParagraphToken) \
+               or LineBreakToken.close_matching(self, match)
             
     def close(self, match, new_token):
-        if len(new_token.xhtml) != 0 or new_token.xhtml.text is not None \
-                                     or new_token.xhtml.tail is not None:
-           new_token.xhtml.tag = 'p'
-           match.xhtml.append(new_token.xhtml)
-        return match
+        if LineBreakToken.close_matching(self, match):
+            LineBreakToken.close(self, match, new_token)
+        else:
+            if len(new_token.xhtml) != 0 or new_token.xhtml.text is not None \
+                                         or new_token.xhtml.tail is not None:
+               new_token.xhtml.tag = 'p'
+               match.xhtml.append(new_token.xhtml)
+            self.tokens.insert(0, match)
+            self.do_extended_close(match)
+            
+    def do_extended_close(self, inserted_token):
+        pass
         
     def render(self, new_token):
         new_token.prepend_element_contents(self.xhtml)
         
-    def evaluate(self, result, tokens):
+    def evaluate(self, result, tokens, state):
         while type(tokens[0]) == LineBreakToken:
             next_token = tokens.pop(0)
             self.token += next_token.token
-        while len (result) >0 and type(result[-1]) == LineBreakToken:
+        while len(result) >0 and type(result[-1]) == LineBreakToken:
             previous_result = result.pop()
-            self.token = next_token.token + self.token
-        Token.evaluate(self, result, tokens)
+            self.token = previous_result.token + self.token
+        LineBreakToken.evaluate(self, result, tokens, state)
             
-
 class BetweenParagraphsToken(ParagraphToken):
-    def close(self, match, new_token):
-        match_ = ParagraphToken.close(self, match, new_token)
-        embed = SubElement(match_.xhtml, self.html_tag)
+    def do_extended_close(self, inserted_token):
+        embed = SubElement(inserted_token.xhtml, self.html_tag)
         embed.text = self.text
-        return match_
 
+class BeetweenParagraphsXHTML(ParagraphToken):
+    def __init__(self, xhtml, token):
+        ParagraphToken.__init__(self, token)
+        self.xhtml = xhtml
+    
+    def do_extended_close(self, inserted_token):
+        inserted_token.xhtml.append(self.xhtml)
+
 class StructureModifyToken(Token): 
 #modifiziert letzte geoeffnete struktur, wird dann wegfallen lassen => keine
 # preference
@@ -307,12 +336,23 @@
                                   '^': ('valign', 'up'),
                                   ',': ('valign', 'down')}
 
-class HeadlineToken(Token): 
+class PrefixToken(Token):
+    def evaluate(self, result, tokens, state):
+        state["prefix_count"] = state.get("prefix_count", 0) + 1
+        Token.evaluate(self, result, tokens, state)
+        
     def render(self, new_token):
+        self.state["prefix_count"] = self.state.get("prefix_count", 0) - 1
+        Token.render(self, new_token)
+    
+    def prefix(self, new_token):
+        self.tokens.insert(0, new_token)
+
+class HeadlineToken(PrefixToken): 
+    def prefix(self, new_token):
         new_token.xhtml.tag = 'h%i' % (len(self.token) - 1)
-        xhtml = Element('div')
-        xhtml.append(new_token.xhtml)
-        new_token.xhtml = xhtml
+        PrefixToken.prefix(self, BeetweenParagraphsXHTML(new_token.xhtml, 
+                                                         self.token))
     
 class ListToken(Token): 
     pass
@@ -410,10 +450,11 @@
         tokens = tokens[0]
         tokens.append(EndToken())
         result = []
+        state = {}
         
         while len(tokens) > 0:
             token = tokens.pop(0)
-            token.evaluate(result, tokens)
+            token.evaluate(result, tokens, state)
         
         if len(tokens) != 0:
             raise WikiParserError('WikiParser error in "%s"' % text)



From fingerle at berlios.de  Sun Mar 26 21:06:26 2006
From: fingerle at berlios.de (fingerle at BerliOS)
Date: Sun, 26 Mar 2006 21:06:26 +0200
Subject: [fellowiki-svncheckins] r10 - in trunk/fellowiki: tests/wiki tests/wiki/tests tests/wiki/tests/mixed_markup tests/wiki/tests/simple_markup util wiki
Message-ID: <200603261906.k2QJ6Qxx024407@sheep.berlios.de>

Author: fingerle
Date: 2006-03-26 21:06:23 +0200 (Sun, 26 Mar 2006)
New Revision: 10

Added:
   trunk/fellowiki/tests/wiki/tests/mixed_markup/
   trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_concurrent.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_concurrent.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_embedded.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_embedded.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_concurrent.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_concurrent.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_embedded.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_embedded.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/pre_with_non_pre.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/pre_with_non_pre.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_concurrent.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_concurrent.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_embedded.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_embedded.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_concurrent.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_concurrent.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_embedded.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_embedded.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/bold_block.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/bold_block.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/bold_local.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/bold_local.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/double_quotes.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/double_quotes.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/horizontal_rule.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic_block.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic_block.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic_embedded.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic_embedded.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic_local.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic_local.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/large_font.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/large_font.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/single_quotes.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/single_quotes.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/small_font.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/small_font.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/subscript.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/subscript.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/superscript.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/superscript.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_block.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_block.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_local.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_local.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_block.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_block.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_local.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_local.wiki
Removed:
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.wiki
Modified:
   trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/horizontal_rule.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.wiki
   trunk/fellowiki/tests/wiki/ut_parser.py
   trunk/fellowiki/util/assorted.py
   trunk/fellowiki/wiki/parser.py
Log:
- wiki parser: fixed headlines
- wiki parser: fixed horizontal rule
- wiki parser: fixed pre with non-pre (pre test-case)
- wiki parser: fixed italic
- wiki parser: fixed bold
- wiki parser: fixed underlined
- wiki parser: fixed typewriter
- wiki parser: fixed single quotes
- wiki parser: fixed double quotes
- wiki parser: fixed superscript
- wiki parser: fixed subscript
- wiki parser: fixed large font
- wiki parser: fixed small font
- wiki parser: fixed n/m-dash
- wiki parser: fixed line break in input


Added: trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_concurrent.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_concurrent.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_concurrent.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-bold<b class="bold">bold*bold</b>non-bold*non-bold</p><p>non-bold<b class="bold">bold*bold</b>non-bold<b class="bold">bold</b>non-bold</p><p>non-bold*non-bold<b class="bold">bold*bold</b>non-bold</p><p>non-bold<b class="bold">bold</b>non-bold<b class="bold">bold*bold</b>non-bold</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_concurrent.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_concurrent.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_concurrent.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,7 @@
+non-bold[*bold*bold*]non-bold*non-bold
+
+non-bold[*bold*bold*]non-bold*bold*non-bold
+
+non-bold*non-bold[*bold*bold*]non-bold
+
+non-bold*bold*non-bold[*bold*bold*]non-bold

Added: trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_embedded.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_embedded.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_embedded.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-bold<b class="bold">bold<span class="bold-embedded">bold</span>bold</b>non-bold</p><p>non-bold*non-bold<b class="bold">bold</b>non-bold*non-bold</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_embedded.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_embedded.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_embedded.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,3 @@
+non-bold[*bold*bold*bold*]non-bold
+
+non-bold*non-bold[*bold*]non-bold*non-bold

Added: trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_concurrent.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_concurrent.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_concurrent.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-italic<em class="italic">italic/italic</em>non-italic/non-italic</p><p>non-italic<em class="italic">italic/italic</em>non-italic<em class="italic">italic</em>non-italic</p><p>non-italic/non-italic<em class="italic">italic/italic</em>non-italic</p><p>non-italic<em class="italic">italic</em>non-italic<em class="italic">italic/italic</em>non-italic</p></div></body></html>
\ No newline at end of file

Added: trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_concurrent.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_concurrent.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_concurrent.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,7 @@
+non-italic[/italic/italic/]non-italic/non-italic
+
+non-italic[/italic/italic/]non-italic/italic/non-italic
+
+non-italic/non-italic[/italic/italic/]non-italic
+
+non-italic/italic/non-italic[/italic/italic/]non-italic

Added: trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_embedded.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_embedded.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_embedded.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-italic<em class="italic">italic<span class="italic-embedded">italic</span>italic</em>non-italic</p><p>non-italic/non-italic<em class="italic">italic</em>non-italic/non-italic</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_embedded.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_embedded.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_embedded.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,3 @@
+non-italic[/italic/italic/italic/]non-italic
+
+non-italic/non-italic[/italic/]non-italic/non-italic

Copied: trunk/fellowiki/tests/wiki/tests/mixed_markup/pre_with_non_pre.complete.xml (from rev 8, trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.complete.xml)
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.complete.xml	2006-03-19 23:19:08 UTC (rev 8)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/pre_with_non_pre.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,5 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><pre>preformatted text.
+[@preformatted text. &lt;&amp;&gt;
+[@preformatted text.@]
+
+\preformatted text.</pre><p>non-preformatted text.@]</p></div></body></html>

Copied: trunk/fellowiki/tests/wiki/tests/mixed_markup/pre_with_non_pre.wiki (from rev 7, trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.wiki)
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.wiki	2006-03-18 15:52:44 UTC (rev 7)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/pre_with_non_pre.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,6 @@
+[@preformatted text.
+[@preformatted text. <&>
+\[@preformatted text.\@]
+
+\\\preformatted text.@]
+non-preformatted text.@]

Added: trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_concurrent.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_concurrent.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_concurrent.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-typewriter<tt class="typewriter">typewriter=typewriter</tt>non-typewriter=non-typewriter</p><p>non-typewriter<tt class="typewriter">typewriter=typewriter</tt>non-typewriter<tt class="typewriter">typewriter</tt>non-typewriter</p><p>non-typewriter=non-typewriter<tt class="typewriter">typewriter=typewriter</tt>non-typewriter</p><p>non-typewriter<tt class="typewriter">typewriter</tt>non-typewriter<tt class="typewriter">typewriter=typewriter</tt>non-typewriter</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_concurrent.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_concurrent.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_concurrent.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,7 @@
+non-typewriter[=typewriter=typewriter=]non-typewriter=non-typewriter
+
+non-typewriter[=typewriter=typewriter=]non-typewriter=typewriter=non-typewriter
+
+non-typewriter=non-typewriter[=typewriter=typewriter=]non-typewriter
+
+non-typewriter=typewriter=non-typewriter[=typewriter=typewriter=]non-typewriter

Added: trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_embedded.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_embedded.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_embedded.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-typewriter<tt class="typewriter">typewriter<span class="typewriter-embedded">typewriter</span>typewriter</tt>non-typewriter</p><p>non-typewriter=non-typewriter<tt class="typewriter">typewriter</tt>non-typewriter=non-typewriter</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_embedded.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_embedded.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_embedded.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,3 @@
+non-typewriter[=typewriter=typewriter=typewriter=]non-typewriter
+
+non-typewriter=non-typewriter[=typewriter=]non-typewriter=non-typewriter

Added: trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_concurrent.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_concurrent.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_concurrent.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-underlined<span class="underlined">underlined_underlined</span>non-underlined_non-underlined</p><p>non-underlined<span class="underlined">underlined_underlined</span>non-underlined<span class="underlined">underlined</span>non-underlined</p><p>non-underlined_non-underlined<span class="underlined">underlined_underlined</span>non-underlined</p><p>non-underlined<span class="underlined">underlined</span>non-underlined<span class="underlined">underlined_underlined</span>non-underlined</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_concurrent.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_concurrent.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_concurrent.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,7 @@
+non-underlined[_underlined_underlined_]non-underlined_non-underlined
+
+non-underlined[_underlined_underlined_]non-underlined_underlined_non-underlined
+
+non-underlined_non-underlined[_underlined_underlined_]non-underlined
+
+non-underlined_underlined_non-underlined[_underlined_underlined_]non-underlined

Added: trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_embedded.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_embedded.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_embedded.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-underlined<span class="underlined">underlined<span class="underlined-embedded">underlined</span>underlined</span>non-underlined</p><p>non-underlined_non-underlined<span class="underlined">underlined</span>non-underlined_non-underlined</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_embedded.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_embedded.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_embedded.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,3 @@
+non-underlined[_underlined_underlined_underlined_]non-underlined
+
+non-underlined_non-underlined[_underlined_]non-underlined_non-underlined

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/bold_block.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/bold_block.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/bold_block.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-bold<b class="bold">bold</b>non-bold</p><p>non-bold<b class="bold">bold bold</b>non-bold</p><p>non-bold<b class="bold">bold[*bold</b>non-bold</p><p>non-bold<b class="bold">bold</b>non-bold*]non-bold</p><p>non-bold<b class="bold">bold[*bold</b>non-bold*]non-bold</p><p>empty: [**]</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/bold_block.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/bold_block.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/bold_block.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,12 @@
+non-bold[*bold*]non-bold
+
+non-bold[*bold
+bold*]non-bold
+
+non-bold[*bold[*bold*]non-bold
+
+non-bold[*bold*]non-bold*]non-bold
+
+non-bold[*bold[*bold*]non-bold*]non-bold
+
+empty: [**]

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/bold_local.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/bold_local.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/bold_local.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-bold<b class="bold">bold</b>non-bold</p><p>non-bold*non-bold</p><p>non-bold<b class="bold">bold</b>non-bold*non-bold</p><p>non-bold*non-bold non-bold*non-bold</p><p>empty: **</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/bold_local.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/bold_local.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/bold_local.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,10 @@
+non-bold*bold*non-bold
+
+non-bold*non-bold
+
+non-bold*bold*non-bold*non-bold
+
+non-bold*non-bold 
+non-bold*non-bold
+
+empty: **

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/double_quotes.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/double_quotes.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/double_quotes.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-double-quotes<span class="double_quotes">double-quotes</span>non-double-quotes</p><p>non-double-quotes<span class="double_quotes">double-quotes double-quotes</span>non-double-quotes</p><p>non-double-quotes<span class="double_quotes">double-quotes["double-quotes</span>non-double-quotes</p><p>non-double-quotes<span class="double_quotes">double-quotes</span>non-double-quotes"]non-double-quotes</p><p>non-double-quotes<span class="double_quotes">double-quotes["double-quotes</span>non-double-quotes"]non-double-quotes</p><p>empty: [""]</p><p>no non-block syntax: "non-double-quotes"</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/double_quotes.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/double_quotes.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/double_quotes.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,14 @@
+non-double-quotes["double-quotes"]non-double-quotes
+
+non-double-quotes["double-quotes
+double-quotes"]non-double-quotes
+
+non-double-quotes["double-quotes["double-quotes"]non-double-quotes
+
+non-double-quotes["double-quotes"]non-double-quotes"]non-double-quotes
+
+non-double-quotes["double-quotes["double-quotes"]non-double-quotes"]non-double-quotes
+
+empty: [""]
+
+no non-block syntax: "non-double-quotes"

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>=no headline ==no headline ===no headline ====no headline =====no headline ======no headline =======no headline</p><h1>Headline 1</h1><h1>Headline 1</h1><h2>Headline 2</h2><h2>Headline 2</h2><h3>Headline 3</h3><h3>Headline 3</h3><h4>Headline 4</h4><h4>Headline 4</h4><h5>Headline 5</h5><h5>Headline 5</h5><h6>Headline 6</h6><h6>Headline 6</h6><p>======= no Headline ======= no Headline</p><h1>we don't "close" headlines =</h1><h2>we don't "close" headlines ==</h2><h3>we don't "close" headlines ===</h3><h4>we don't "close" headlines ====</h4><h5>we don't "close" headlines =====</h5><h6>we don't "close" headlines ======</h6></div></body></html>

Modified: trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -1,10 +1,10 @@
 =no headline
 ==no headline
 ===no headline
+====no headline
 =====no headline
 ======no headline
 =======no headline
-========no headline
 
 = Headline 1
 = Headline 1

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/horizontal_rule.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/horizontal_rule.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/horizontal_rule.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>text</p><hr /><p>text ---- text ----  text ---- text &#8212; text ----- text</p><hr /><p>text</p></div></body></html>
\ No newline at end of file

Modified: trunk/fellowiki/tests/wiki/tests/simple_markup/horizontal_rule.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/horizontal_rule.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/horizontal_rule.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -1 +1,17 @@
-TODO
+text
+----
+text
+ ----
+text
+---- 
+text
+ ---- 
+text
+---
+text
+-----
+text
+
+----
+
+text

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/italic.complete.xml
===================================================================

Deleted: trunk/fellowiki/tests/wiki/tests/simple_markup/italic.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/italic.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/italic.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -1,4 +0,0 @@
-/italic/
-[/italic/]
-[/non-italic/italic/non-italic/]
-/non-italic[/italic/]non-italic/

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/italic_block.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/italic_block.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/italic_block.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-italic<em class="italic">italic</em>non-italic</p><p>non-italic<em class="italic">italic italic</em>non-italic</p><p>non-italic<em class="italic">italic[/italic</em>non-italic</p><p>non-italic<em class="italic">italic</em>non-italic/]non-italic</p><p>non-italic<em class="italic">italic[/italic</em>non-italic/]non-italic</p><p>empty: [//]</p></div></body></html>
\ No newline at end of file

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/italic_block.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/italic_block.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/italic_block.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,12 @@
+non-italic[/italic/]non-italic
+
+non-italic[/italic
+italic/]non-italic
+
+non-italic[/italic[/italic/]non-italic
+
+non-italic[/italic/]non-italic/]non-italic
+
+non-italic[/italic[/italic/]non-italic/]non-italic
+
+empty: [//]

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/italic_embedded.complete.xml
===================================================================

Copied: trunk/fellowiki/tests/wiki/tests/simple_markup/italic_embedded.wiki (from rev 7, trunk/fellowiki/tests/wiki/tests/simple_markup/italic.wiki)

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/italic_local.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/italic_local.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/italic_local.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-italic<em class="italic">italic</em>non-italic</p><p>non-italic/non-italic</p><p>non-italic<em class="italic">italic</em>non-italic/non-italic</p><p>non-italic/non-italic non-italic/non-italic</p><p>empty: //</p></div></body></html>
\ No newline at end of file

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/italic_local.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/italic_local.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/italic_local.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,10 @@
+non-italic/italic/non-italic
+
+non-italic/non-italic
+
+non-italic/italic/non-italic/non-italic
+
+non-italic/non-italic 
+non-italic/non-italic
+
+empty: //

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/large_font.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/large_font.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/large_font.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-large-font<span class="large">large-font</span>non-large-font</p><p>non-large-font<span class="large">large-font large-font</span>non-large-font</p><p>non-large-font<span class="large">large-font[#large-font</span>non-large-font</p><p>non-large-font<span class="large">large-font</span>non-large-font#]non-large-font</p><p>non-large-font<span class="large">large-font[#large-font</span>non-large-font#]non-large-font</p><p>empty: [##]</p><p>no non-block syntax: #non-large-font#</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/large_font.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/large_font.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/large_font.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,14 @@
+non-large-font[#large-font#]non-large-font
+
+non-large-font[#large-font
+large-font#]non-large-font
+
+non-large-font[#large-font[#large-font#]non-large-font
+
+non-large-font[#large-font#]non-large-font#]non-large-font
+
+non-large-font[#large-font[#large-font#]non-large-font#]non-large-font
+
+empty: [##]
+
+no non-block syntax: #non-large-font#

Modified: trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -1 +1 @@
-<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>Hello world! %%% Hello world!<br />Hello world!<br />Hello world!</p></div></body></html>
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>Hello world! %%% Hello world! %%%% Hello world!<br />Hello world!<br />Hello world!<br />Hello world!</p></div></body></html>
\ No newline at end of file

Modified: trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -5,3 +5,8 @@
 Hello world!
 %%%%%
 Hello world!
+%%%%%%
+Hello world!
+%%%%%
+%%%%%%
+Hello world!

Deleted: trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -1,4 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>[@Preformatted text.</p><pre>Preformatted text. &lt;&amp;&gt;
-[@Preformatted text.@]
-
-\Preformatted text.</pre><p>Preformatted text.@]</p></div></body></html>

Deleted: trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/pre_with_non_pre.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -1,6 +0,0 @@
-[@Preformatted text.
-[@Preformatted text. <&>
-\[@Preformatted text.\@]
-
-\\\Preformatted text.@]
-Preformatted text.@]

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/single_quotes.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/single_quotes.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/single_quotes.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-single-quotes<span class="single_quotes">single-quotes</span>non-single-quotes</p><p>non-single-quotes<span class="single_quotes">single-quotes single-quotes</span>non-single-quotes</p><p>non-single-quotes<span class="single_quotes">single-quotes['single-quotes</span>non-single-quotes</p><p>non-single-quotes<span class="single_quotes">single-quotes</span>non-single-quotes']non-single-quotes</p><p>non-single-quotes<span class="single_quotes">single-quotes['single-quotes</span>non-single-quotes']non-single-quotes</p><p>empty: ['']</p><p>no non-block syntax: 'non-single-quotes'</p></div></body></html>
\ No newline at end of file

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/single_quotes.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/single_quotes.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/single_quotes.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,14 @@
+non-single-quotes['single-quotes']non-single-quotes
+
+non-single-quotes['single-quotes
+single-quotes']non-single-quotes
+
+non-single-quotes['single-quotes['single-quotes']non-single-quotes
+
+non-single-quotes['single-quotes']non-single-quotes']non-single-quotes
+
+non-single-quotes['single-quotes['single-quotes']non-single-quotes']non-single-quotes
+
+empty: ['']
+
+no non-block syntax: 'non-single-quotes'

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/small_font.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/small_font.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/small_font.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-small-font<span class="small">small-font</span>non-small-font</p><p>non-small-font<span class="small">small-font small-font</span>non-small-font</p><p>non-small-font<span class="small">small-font[~small-font</span>non-small-font</p><p>non-small-font<span class="small">small-font</span>non-small-font~]non-small-font</p><p>non-small-font<span class="small">small-font[~small-font</span>non-small-font~]non-small-font</p><p>empty: [~~]</p><p>no non-block syntax: ~non-small-font~</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/small_font.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/small_font.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/small_font.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,14 @@
+non-small-font[~small-font~]non-small-font
+
+non-small-font[~small-font
+small-font~]non-small-font
+
+non-small-font[~small-font[~small-font~]non-small-font
+
+non-small-font[~small-font~]non-small-font~]non-small-font
+
+non-small-font[~small-font[~small-font~]non-small-font~]non-small-font
+
+empty: [~~]
+
+no non-block syntax: ~non-small-font~

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>/test / / test/ / test / <em class="italic">test</em> t<em class="italic">es</em>t</p><p>*test * * test* * test * <b class="bold">test</b> t<b class="bold">es</b>t</p><p>_test _ _ test_ _ test _ <span class="underlined">test</span> t<span class="underlined">es</span>t</p><p>=test = = test= = test = <tt class="typewriter">test</tt> t<tt class="typewriter">es</tt>t</p><p>test<em class="italic"> test test </em>test <em class="italic">test</em> test <em class="italic"> test </em> test</p><p>test<b class="bold"> test test </b>test <b class="bold">test</b> test <b class="bold"> test </b> test</p><p>test<span class="underlined"> test test </span>test <span class="underlined">test</span> test <span class="underlined"> test </span> test</p><p>test<tt class="typewriter"> test test </tt>test <tt class="typewriter">test</tt> test <tt class="typewriter"> test </tt> test</p><p>test<!
 span class="single_quotes"> test test </span>test <span class="single_quotes">test</span> test <span class="single_quotes"> test </span> test</p><p>test<span class="double_quotes"> test test </span>test <span class="double_quotes">test</span> test <span class="double_quotes"> test </span> test</p><p>test<span class="superscript"> test test </span>test <span class="superscript">test</span> test <span class="superscript"> test </span> test</p><p>test<span class="subscript"> test test </span>test <span class="subscript">test</span> test <span class="subscript"> test </span> test</p><p>test<span class="large"> test test </span>test <span class="large">test</span> test <span class="large"> test </span> test</p><p>test<span class="small"> test test </span>test <span class="small">test</span> test <span class="small"> test </span> test</p></div></body></html>
\ No newline at end of file

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,27 @@
+/test / / test/ / test / /test/ t/es/t
+
+*test * * test* * test * *test* t*es*t
+
+_test _ _ test_ _ test _ _test_ t_es_t
+
+=test = = test= = test = =test= t=es=t
+
+test[/ test test /]test [/test/] test [/ test /] test
+
+test[* test test *]test [*test*] test [* test *] test
+
+test[_ test test _]test [_test_] test [_ test _] test
+
+test[= test test =]test [=test=] test [= test =] test
+
+test[' test test ']test ['test'] test [' test '] test
+
+test[" test test "]test ["test"] test [" test "] test
+
+test[^ test test ^]test [^test^] test [^ test ^] test
+
+test[, test test ,]test [,test,] test [, test ,] test
+
+test[# test test #]test [#test#] test [# test #] test
+
+test[~ test test ~]test [~test~] test [~ test ~] test

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/subscript.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/subscript.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/subscript.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-subscript<span class="subscript">subscript</span>non-subscript</p><p>non-subscript<span class="subscript">subscript subscript</span>non-subscript</p><p>non-subscript<span class="subscript">subscript[,subscript</span>non-subscript</p><p>non-subscript<span class="subscript">subscript</span>non-subscript,]non-subscript</p><p>non-subscript<span class="subscript">subscript[,subscript</span>non-subscript,]non-subscript</p><p>empty: [,,]</p><p>no non-block syntax: ,non-subscript,</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/subscript.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/subscript.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/subscript.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,14 @@
+non-subscript[,subscript,]non-subscript
+
+non-subscript[,subscript
+subscript,]non-subscript
+
+non-subscript[,subscript[,subscript,]non-subscript
+
+non-subscript[,subscript,]non-subscript,]non-subscript
+
+non-subscript[,subscript[,subscript,]non-subscript,]non-subscript
+
+empty: [,,]
+
+no non-block syntax: ,non-subscript,

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/superscript.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/superscript.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/superscript.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-superscript<span class="superscript">superscript</span>non-superscript</p><p>non-superscript<span class="superscript">superscript superscript</span>non-superscript</p><p>non-superscript<span class="superscript">superscript[^superscript</span>non-superscript</p><p>non-superscript<span class="superscript">superscript</span>non-superscript^]non-superscript</p><p>non-superscript<span class="superscript">superscript[^superscript</span>non-superscript^]non-superscript</p><p>empty: [^^]</p><p>no non-block syntax: ^non-superscript^</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/superscript.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/superscript.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/superscript.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,14 @@
+non-superscript[^superscript^]non-superscript
+
+non-superscript[^superscript
+superscript^]non-superscript
+
+non-superscript[^superscript[^superscript^]non-superscript
+
+non-superscript[^superscript^]non-superscript^]non-superscript
+
+non-superscript[^superscript[^superscript^]non-superscript^]non-superscript
+
+empty: [^^]
+
+no non-block syntax: ^non-superscript^

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_block.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_block.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_block.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-typewriter<tt class="typewriter">typewriter</tt>non-typewriter</p><p>non-typewriter<tt class="typewriter">typewriter typewriter</tt>non-typewriter</p><p>non-typewriter<tt class="typewriter">typewriter[=typewriter</tt>non-typewriter</p><p>non-typewriter<tt class="typewriter">typewriter</tt>non-typewriter=]non-typewriter</p><p>non-typewriter<tt class="typewriter">typewriter[=typewriter</tt>non-typewriter=]non-typewriter</p><p>empty: [==]</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_block.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_block.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_block.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,12 @@
+non-typewriter[=typewriter=]non-typewriter
+
+non-typewriter[=typewriter
+typewriter=]non-typewriter
+
+non-typewriter[=typewriter[=typewriter=]non-typewriter
+
+non-typewriter[=typewriter=]non-typewriter=]non-typewriter
+
+non-typewriter[=typewriter[=typewriter=]non-typewriter=]non-typewriter
+
+empty: [==]

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_local.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_local.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_local.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-typewriter<tt class="typewriter">typewriter</tt>non-typewriter</p><p>non-typewriter=non-typewriter</p><p>non-typewriter<tt class="typewriter">typewriter</tt>non-typewriter=non-typewriter</p><p>non-typewriter=non-typewriter non-typewriter=non-typewriter</p><p>empty: ==</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_local.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_local.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_local.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,10 @@
+non-typewriter=typewriter=non-typewriter
+
+non-typewriter=non-typewriter
+
+non-typewriter=typewriter=non-typewriter=non-typewriter
+
+non-typewriter=non-typewriter 
+non-typewriter=non-typewriter
+
+empty: ==

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_block.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_block.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_block.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-underlined<span class="underlined">underlined</span>non-underlined</p><p>non-underlined<span class="underlined">underlined underlined</span>non-underlined</p><p>non-underlined<span class="underlined">underlined[_underlined</span>non-underlined</p><p>non-underlined<span class="underlined">underlined</span>non-underlined_]non-underlined</p><p>non-underlined<span class="underlined">underlined[_underlined</span>non-underlined_]non-underlined</p><p>empty: [__]</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_block.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_block.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_block.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,12 @@
+non-underlined[_underlined_]non-underlined
+
+non-underlined[_underlined
+underlined_]non-underlined
+
+non-underlined[_underlined[_underlined_]non-underlined
+
+non-underlined[_underlined_]non-underlined_]non-underlined
+
+non-underlined[_underlined[_underlined_]non-underlined_]non-underlined
+
+empty: [__]

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_local.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_local.complete.xml	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_local.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>non-underlined<span class="underlined">underlined</span>non-underlined</p><p>non-underlined_non-underlined</p><p>non-underlined<span class="underlined">underlined</span>non-underlined_non-underlined</p><p>non-underlined_non-underlined non-underlined_non-underlined</p><p>empty: __</p></div></body></html>

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_local.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_local.wiki	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_local.wiki	2006-03-26 19:06:23 UTC (rev 10)
@@ -0,0 +1,10 @@
+non-underlined_underlined_non-underlined
+
+non-underlined_non-underlined
+
+non-underlined_underlined_non-underlined_non-underlined
+
+non-underlined_non-underlined 
+non-underlined_non-underlined
+
+empty: __

Modified: trunk/fellowiki/tests/wiki/ut_parser.py
===================================================================
--- trunk/fellowiki/tests/wiki/ut_parser.py	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/tests/wiki/ut_parser.py	2006-03-26 19:06:23 UTC (rev 10)
@@ -132,7 +132,7 @@
                 gen_file = codecs.open('%s.%s.generated.xml' % 
                              (fname, tc_extension), 'w+','utf8')
                 gen_file.write(xhtml_text_wiki_ext)
-                gen_file.close
+                gen_file.close()
             except:
                 pass # it's only debug output after all
             raise self.failureException, ex_val, ex_tb 

Modified: trunk/fellowiki/util/assorted.py
===================================================================
--- trunk/fellowiki/util/assorted.py	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/util/assorted.py	2006-03-26 19:06:23 UTC (rev 10)
@@ -29,7 +29,6 @@
 __revision__ = "$Revision:$"
 
 import re
-import copy
 
 # TODO: howto support CElementTree (portably!, utf8-support?)
 
@@ -103,7 +102,7 @@
         ret.text = save_add(etree_1.text, etree_2.text)
         ret[:] = etree_2[:]
     else:
-        last_sub = copy.copy(etree_1[len(etree_1)-1])
+        last_sub = etree_1[len(etree_1)-1]
         last_sub.tail = save_add(last_sub.tail, etree_2.text)
         ret.text = etree_1.text
         ret[:] = etree_1[:-1] + [last_sub] + etree_2[:]

Modified: trunk/fellowiki/wiki/parser.py
===================================================================
--- trunk/fellowiki/wiki/parser.py	2006-03-22 01:06:18 UTC (rev 9)
+++ trunk/fellowiki/wiki/parser.py	2006-03-26 19:06:23 UTC (rev 10)
@@ -30,13 +30,30 @@
 __revision__ = "$Revision:$"
 
 
-from elementtree.ElementTree import Element, SubElement
-
+from elementtree.ElementTree import Element, SubElement, tostring
 from fellowiki.util.assorted import attributes_from_dict, \
-      remove_escaping_backslashes, add_element_contents
+      remove_escaping_backslashes, add_element_contents, save_add
       
-import sre, re
+import sre
+import re
 
+PREFIX_COUNT = "prefix count"
+ENCAPSULATE_MARKUP = "encapsulate markup"
+SWITCH_MARKUP = "switch markup"
+EMBED_MARKUP = "embed markup"
+
+
+SPECIAL_MARKUP = {'/': ('em', 'italic'),
+                  '*': ('b' , 'bold'),
+                  '_': ('span', 'underlined'),
+                  '=': ('tt', 'typewriter'), 
+                  "'": ('span', 'single_quotes'),
+                  '"': ('span', 'double_quotes'),
+                  '^': ('span', 'superscript'),
+                  ',': ('span', 'subscript'),
+                  '#': ('span', 'large'),
+                  '~': ('span', 'small')}
+
 class WikiError(StandardError):
     pass
 
@@ -129,128 +146,111 @@
         return True
 
 class TextToken(Token):
+    def __init__(self, token, new_text = None, **attr_dict):
+        Token.__init__(self, token, new_text = new_text, **attr_dict)
+        
     def render(self, new_token):
         xhtml = Element('div')
-        xhtml.text = re.sub('[ \n\t]+', ' ', self.text)
+        if self.new_text is None:
+            xhtml.text = re.sub('[ \n\t]+', ' ', self.text)
+        else:
+            xhtml.text = re.sub('[ \n\t]+', ' ', self.new_text)
         new_token.prepend_element_contents(xhtml)
 
-class SingleToken(Token):
-    def render(self, new_token):
-        xhtml = Element('div')
-        SubElement(xhtml, self.html_tag)
-        new_token.prepend_element_contents(xhtml)
+class WhitespaceToken(TextToken):
+    def evaluate(self, result, tokens, state):
+        TextToken.evaluate(self, result, tokens, state)
+        for key in SPECIAL_MARKUP.keys():
+            state[SWITCH_MARKUP + key] = 0
         
 class EncapsulateToken(Token):
-    open_wiki_markup = {}
-    open_html_markup = {}
+    def render(self, new_token):
+        if self.type == '(':
+            self.state[self.STATE] = self.state.get(self.STATE, 0) - 1
+        Token.render(self, new_token)
+    
     def evaluate(self, result, tokens, state):
+        self.second_content = None
+        Token.evaluate(self, result, tokens, state)
         if self.type == '(':
-            self.is_nested_wiki = bool(self.open_wiki_markup.get(self.text, 
-                                                                 False))
-            self.is_nested_html = bool(self.open_html_markup.get(self.html_tag,
-                                                                 False))
-            self.open_wiki_markup[self.text] = \
-                                self.open_wiki_markup.get(self.text, 0) + 1
-            self.open_html_markup[self.html_tag] = \
-                                self.open_html_markup.get(self.html_tag, 0) + 1
-#          if self.type == '_' and self.open_wiki_markup.get(self.text, False):
-#              self.is_valid_middle_element = \ 
-#                            markers.get(self.input_marker+'~_',False)
-#                markers[self.input_marker+'~_'] = True
-        if self.type == ')':
-            self.second_content = None
-        Token.evaluate(self, result, tokens, state)
+           state[self.STATE] = state.get(self.STATE, 0) + 1
         
     def match_is_open(self):
         if self.type == ')':
-            try: 
-                return bool(self.open_wiki_markup[self.text])
-            except KeyError:
-                return False
-        # was ist mit '_'?
+            return self.state.get(self.STATE, 0) > 0
+        return False
     
     def close_matching(self, match):
-        if (self.type == ')' and self.__class__ == match.__class__
-            and self.text == match.text
-            and match.type == '(' and not match.is_nested_html):
-            return True
-        else:
-            try:
-                return (self.type == ')' and isinstance(self, match.__class__)
-                    and self.text == match.text
-                    and match.type == '_' and match.is_valid_middle_element)
-            except AttributeError:
-                return False
+        return (self.state.get(self.STATE, 0) == 1 and
+                self.type == ')' and isinstance(match, EncapsulateToken) and 
+                self.STATE == match.STATE and self.text == match.text and 
+                match.type == '(')
             
     def close(self, match, new_token):
-        if match.type == '(':
-            match.open_wiki_markup[match.text] = \
-                            match.open_wiki_markup.get(match.text, 0) - 1
-            match.open_html_markup[match.html_tag] = \
-                            match.open_html_markup.get(match.html_tag, 0) - 1
-            self.type = '*'
-            self.do_close(match, new_token, self.second_content)
-        #elif self.type == '_' and markers[self.input_marker]:
-        #    markers[match.input_marker+'~_'] = False
-        #    self.second_content = new_token
-        else:
-            raise WikiTokenError("'close' where not allowed")
-        self.tokens.insert(0, self)
+        self.state[self.STATE] = self.state.get(self.STATE, 0) - 1
+        self.tokens.insert(0, new_token)
     
-    def gets_eaten(self):
-        if self.type == '(':
-            self.open_wiki_markup[self.text] = \
-                                self.open_wiki_markup.get(self.text, 0) - 1
-            self.open_html_markup[self.html_tag] = \
-                                self.open_html_markup.get(self.html_tag, 0) - 1
-
 class EncapsulateMarkupToken(EncapsulateToken):
-    special_markup = {'/': ('em', 'italic'),
-                            '*': ('b', 'bold'),
-                            '_': ('em', 'underline'),
-                            '=': ('tt', 'typewriter'), 
-                            "'": ('div', 'single_quotes'),
-                            '"': ('div', 'double_quotes'),
-                            '^': ('div', 'superscript'),
-                            ',': ('div', 'subscript'),
-                            '#': ('div', 'large'),
-                            '~': ('div', 'small')}; # TODO: check markup
-    
     def __init__(self, token, *args, **kwargs):
         EncapsulateToken.__init__(self, token, *args, **kwargs)
-        self.html_tag = self.special_markup[self.text][0]
-        self.xhtml = Element('div')
+        self.STATE = ENCAPSULATE_MARKUP + self.text
+        self.EMBED = EMBED_MARKUP + self.text
 
-    def render(self, new_token):
-        if not self.type == '*':
-            self.gets_eaten()
-            self.xhtml.text = self.token
-        new_token.prepend_element_contents(self.xhtml)
-        
-    def do_close(self, match, new_token, second_content):
-        assert(second_content is not None)
-        
+    def close(self, match, new_token):
+        EncapsulateToken.close(self, match, new_token)
         if new_token.xhtml.text is not None or len(new_token.xhtml) > 0:
-            new_token.xhtml.tag = self.special_markup[self.text][0]
-            self.xhtml[:] = [new_token]
+            new_token.xhtml.tag = SPECIAL_MARKUP[self.text][0]
+            new_token.xhtml.set('class',SPECIAL_MARKUP[self.text][1])
+            xhtml = Element('div')
+            xhtml.append(new_token.xhtml)
+            new_token.xhtml = xhtml
+            for xhtml_purge in self.state.pop(self.EMBED,()):
+                xhtml_purge.tag = 'span'
+                xhtml_purge.set('class', xhtml_purge.get('class') + '-embedded')
         else:
-            self.xhtml.text = match.token + self.token
+            new_token.xhtml.text = save_add(match.token+self.token, 
+                                            new_token.xhtml.text)
             
-class SwitchMarkupToken(EncapsulateMarkupToken):
-    open_wiki_markup = {}
+class SwitchMarkupToken(Token):
+    def __init__(self, token, *args, **kwargs):
+        Token.__init__(self, token, *args, **kwargs)
+        self.STATE = SWITCH_MARKUP + self.text
+        self.EMBED = EMBED_MARKUP + self.text
+    
     def evaluate(self, result, tokens, state):
-        if not hasattr(self, 'type'):
-            if (bool(self.open_wiki_markup.get(self.text, False)) or
-                 bool(self.open_html_markup.get(self.html_tag, False))):
-                self.type = ')'
-            else:
-                self.type = '('
-            
-        EncapsulateMarkupToken.evaluate(self, result, tokens, state)
-    def do_close(self,match, new_token, second_content): 
-        self.content = new_token.xhtml # TODO: this is only a DEBUG fix
+        Token.evaluate(self, result, tokens, state)
+        state[self.STATE] = state.get(self.STATE, 0) + 1
 
+    def match_is_open(self):
+        return self.state.get(self.STATE, 0) > 0
+
+    def close_matching(self, match):
+        return self.state.get(self.STATE, 0) == 1 \
+            and isinstance(match, SwitchMarkupToken)
         
+    def close(self, match, new_token):
+        self.state[self.STATE] = self.state.get(self.STATE, 0) - 2
+        if new_token.xhtml.text is not None or len(new_token.xhtml) > 0:
+            new_token.xhtml.tag = SPECIAL_MARKUP[self.text][0]
+            new_token.xhtml.set('class', SPECIAL_MARKUP[self.text][1])
+            if self.state.get(ENCAPSULATE_MARKUP + self.text, 0) > 0:
+                if not self.state.has_key(self.EMBED):
+                    self.state[self.EMBED] = []
+                self.state[self.EMBED].append(new_token.xhtml)
+            xhtml = Element('div')
+            xhtml.append(new_token.xhtml)
+            new_token.xhtml = xhtml
+        else:
+            new_token.xhtml.text = save_add(match.token+self.token, 
+                                            new_token.xhtml.text)
+        self.tokens.insert(0, new_token)
+
+    def render(self, new_token):
+        self.state[self.STATE] = self.state.get(self.STATE, 0) - 1
+        Token.render(self, new_token)
+
+
+        
 class LineBreakToken(Token):
     def render(self, new_token):
         xhtml = Element('div')
@@ -265,19 +265,33 @@
             Token.evaluate(self, result, tokens, state)
     
     def match_is_open(self):
-        return self.state.get("prefix_count", 0) > 0
+        return self.state.get(PREFIX_COUNT, 0) > 0
     
     def close_matching(self, match):
         return isinstance(match, PrefixToken)
         
     def close(self, match, new_token):
-        self.state["prefix_count"] = self.state.get("prefix_count", 0) - 1
+        self.state[PREFIX_COUNT] = self.state.get(PREFIX_COUNT, 0) - 1
         match.prefix(new_token)
         self.tokens.insert(0, self)
             
-class ParagraphToken(LineBreakToken):
+class LineBreakOutputToken(LineBreakToken):
+    def render(self, new_token):
+        xhtml = Element('div')
+        SubElement(xhtml, 'br')
+        new_token.prepend_element_contents(xhtml)
+    def evaluate(self, result, tokens, state):
+        while type(tokens[0]) == LineBreakToken:
+            next_token = tokens.pop(0)
+            self.token += next_token.token
+        while len(result) >0 and type(result[-1]) == LineBreakToken:
+            previous_result = result.pop()
+            self.token = previous_result.token + self.token
+        LineBreakToken.evaluate(self, result, tokens, state)
+        
+class ParagraphToken(LineBreakOutputToken):
     def __init__(self, token, *args, **kwargs):
-        LineBreakToken.__init__(self, token, *args, **kwargs)
+        LineBreakOutputToken.__init__(self, token, *args, **kwargs)
         self.preference = 0
         self.xhtml = Element('div')
         
@@ -286,11 +300,11 @@
     
     def close_matching(self, match):
         return isinstance(match, ParagraphToken) \
-               or LineBreakToken.close_matching(self, match)
+               or LineBreakOutputToken.close_matching(self, match)
             
     def close(self, match, new_token):
-        if LineBreakToken.close_matching(self, match):
-            LineBreakToken.close(self, match, new_token)
+        if LineBreakOutputToken.close_matching(self, match):
+            LineBreakOutputToken.close(self, match, new_token)
         else:
             if len(new_token.xhtml) != 0 or new_token.xhtml.text is not None \
                                          or new_token.xhtml.tail is not None:
@@ -304,15 +318,6 @@
         
     def render(self, new_token):
         new_token.prepend_element_contents(self.xhtml)
-        
-    def evaluate(self, result, tokens, state):
-        while type(tokens[0]) == LineBreakToken:
-            next_token = tokens.pop(0)
-            self.token += next_token.token
-        while len(result) >0 and type(result[-1]) == LineBreakToken:
-            previous_result = result.pop()
-            self.token = previous_result.token + self.token
-        LineBreakToken.evaluate(self, result, tokens, state)
             
 class BetweenParagraphsToken(ParagraphToken):
     def do_extended_close(self, inserted_token):
@@ -327,6 +332,7 @@
     def do_extended_close(self, inserted_token):
         inserted_token.xhtml.append(self.xhtml)
 
+
 class StructureModifyToken(Token): 
 #modifiziert letzte geoeffnete struktur, wird dann wegfallen lassen => keine
 # preference
@@ -338,11 +344,11 @@
 
 class PrefixToken(Token):
     def evaluate(self, result, tokens, state):
-        state["prefix_count"] = state.get("prefix_count", 0) + 1
+        state[PREFIX_COUNT] = state.get(PREFIX_COUNT, 0) + 1
         Token.evaluate(self, result, tokens, state)
         
     def render(self, new_token):
-        self.state["prefix_count"] = self.state.get("prefix_count", 0) - 1
+        self.state[PREFIX_COUNT] = self.state.get(PREFIX_COUNT, 0) - 1
         Token.render(self, new_token)
     
     def prefix(self, new_token):
@@ -353,9 +359,11 @@
         new_token.xhtml.tag = 'h%i' % (len(self.token) - 1)
         PrefixToken.prefix(self, BeetweenParagraphsXHTML(new_token.xhtml, 
                                                          self.token))
-    
+
+
 class ListToken(Token): 
     pass
+
 class LinkToken(Token): 
     pass
 class EmbeddedLinkToken(LinkToken): 
@@ -376,7 +384,7 @@
                      cut_left=2, 
                      cut_right=2, decode_backslash = True)),
               # escaped text, preformatted:
-              (10, r'\[@([^\\@\[]|\\.|@[^\\\]])*@\]', 
+              (10, r'\[@([^\\@]|@?\\.|@[^\\\]])*@\]', 
                      token_factory(BetweenParagraphsToken,
                      preference = 0, html_tag='pre',
                      cut_left=2, cut_right=2, 
@@ -384,8 +392,8 @@
               # escaped single character:
               (10, r'\\.', token_factory(TextToken, cut_left=1)),
               # line break in output
-              (20, r'([ \n\t]*\n%%%%%*[ \n\t]*)+\n',
-                     token_factory(SingleToken, preference=10, html_tag='br')),
+              (20, r'^%%%%%+[ \t]*(\n%%%%%+[ \t]*)*$',
+                     token_factory(LineBreakOutputToken, preference=1)),
               # line break in input (non-printable)
               (40, r'[ \t]*\n[ \t]*', token_factory(LineBreakToken, preference=20)),
               # include link start
@@ -402,11 +410,11 @@
               (20, r'[ \t]>>[ \t]', token_factory(LinkToken, type='_', 
                      preference=20)),
               # special enclosing markup
-              (90, r'[/\*_=]', token_factory(SwitchMarkupToken, preference=40)),
+              (90, r'[/\*_=]', token_factory(SwitchMarkupToken, preference=90)),
               (10, r'\[[/\*_=\'"^,#~]', token_factory(EncapsulateMarkupToken, 
-                    type='(', preference=40, cut_left=1)),
+                    type='(', preference=20, cut_left=1)),
               (10, r'[/\*_=\'"^,#~]\]', token_factory(EncapsulateMarkupToken, 
-                    type=')', preference=40, cut_right=1)),
+                    type=')', preference=20, cut_right=1)),
 
               # modifiers
               (10, r'<[:()^,]>', token_factory(StructureModifyToken, 
@@ -415,23 +423,24 @@
               (10, r'^={1,6}[ \t]', token_factory(HeadlineToken, 
                     preference=30)),
               # lists
-              (10, r'\n[#*-]+[ \t]', token_factory(ListToken, preference=10)),
+              (10, r'^[#*-]+[ \t]', token_factory(ListToken, preference=10)),
               # tables
-              (10, r'\n\|', token_factory(TableToken, type='(', preference=0)),
-              (10, r'\|(?=\n)', token_factory(TableToken, type=')', 
+              (10, r'^\|', token_factory(TableToken, type='(', preference=0)),
+              (10, r'\|$', token_factory(TableToken, type=')', 
                     preference=0)),
               (90, r'\|', token_factory(TableToken, type='_', preference=0)),
               # macros
               (10, r'\{\{', token_factory(MacroToken, type='(', preference=20)),
               (10, r'\}\}', token_factory(MacroToken, type=')', preference=20)),
               # n-dash and m-dash
-              (20, r'--', token_factory(TextToken, new_text=u'\u2013')),
-              (20, r'---', token_factory(TextToken, new_text=u'\u2014')),
+              (20, r'----+', token_factory(TextToken)),
+              (21, r'---', token_factory(TextToken, new_text=u'\u2014')),
+              (22, r'--', token_factory(TextToken, new_text=u'\u2013')),
               # horizontal rule
-              (10, r'\n----(?=\n)', token_factory(SingleToken, preference=0, 
-                     html_tag='hr')),
+              (10, r'^----$', token_factory(BetweenParagraphsToken,
+                     preference = 0, html_tag='hr',cut_left=4)),
               # what's left 
-              (90, r'[ \t]', token_factory(TextToken, preference=30)),
+              (90, r'[ \t]+', token_factory(WhitespaceToken)),
               (99, r'.', token_factory(TextToken))
               ]
 



From fingerle at berlios.de  Sun Mar 26 22:37:52 2006
From: fingerle at berlios.de (fingerle at BerliOS)
Date: Sun, 26 Mar 2006 22:37:52 +0200
Subject: [fellowiki-svncheckins] r11 - in trunk/fellowiki/tests/wiki/tests: . known_issues simple_markup
Message-ID: <200603262037.k2QKbqxa009023@sheep.berlios.de>

Author: fingerle
Date: 2006-03-26 22:37:50 +0200 (Sun, 26 Mar 2006)
New Revision: 11

Added:
   trunk/fellowiki/tests/wiki/tests/known_issues/
   trunk/fellowiki/tests/wiki/tests/known_issues/stress_test/
   trunk/fellowiki/tests/wiki/tests/real_world/
   trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.
   trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/special_characters.complete.xml
Removed:
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic_embedded.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic_embedded.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.wiki
Log:
- small fixes to r10


Deleted: trunk/fellowiki/tests/wiki/tests/simple_markup/italic.complete.xml
===================================================================

Deleted: trunk/fellowiki/tests/wiki/tests/simple_markup/italic_embedded.complete.xml
===================================================================

Deleted: trunk/fellowiki/tests/wiki/tests/simple_markup/italic_embedded.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/italic_embedded.wiki	2006-03-26 19:06:23 UTC (rev 10)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/italic_embedded.wiki	2006-03-26 20:37:50 UTC (rev 11)
@@ -1,4 +0,0 @@
-/italic/
-[/italic/]
-[/non-italic/italic/non-italic/]
-/non-italic[/italic/]non-italic/

Deleted: trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.complete.xml	2006-03-26 20:37:50 UTC (rev 11)
@@ -1 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>/test / / test/ / test / <em class="italic">test</em> t<em class="italic">es</em>t</p><p>*test * * test* * test * <b class="bold">test</b> t<b class="bold">es</b>t</p><p>_test _ _ test_ _ test _ <span class="underlined">test</span> t<span class="underlined">es</span>t</p><p>=test = = test= = test = <tt class="typewriter">test</tt> t<tt class="typewriter">es</tt>t</p><p>test<em class="italic"> test test </em>test <em class="italic">test</em> test <em class="italic"> test </em> test</p><p>test<b class="bold"> test test </b>test <b class="bold">test</b> test <b class="bold"> test </b> test</p><p>test<span class="underlined"> test test </span>test <span class="underlined">test</span> test <span class="underlined"> test </span> test</p><p>test<tt class="typewriter"> test test </tt>test <tt class="typewriter">test</tt> test <tt class="typewriter"> test </tt> test</p><p>test<!
 span class="single_quotes"> test test </span>test <span class="single_quotes">test</span> test <span class="single_quotes"> test </span> test</p><p>test<span class="double_quotes"> test test </span>test <span class="double_quotes">test</span> test <span class="double_quotes"> test </span> test</p><p>test<span class="superscript"> test test </span>test <span class="superscript">test</span> test <span class="superscript"> test </span> test</p><p>test<span class="subscript"> test test </span>test <span class="subscript">test</span> test <span class="subscript"> test </span> test</p><p>test<span class="large"> test test </span>test <span class="large">test</span> test <span class="large"> test </span> test</p><p>test<span class="small"> test test </span>test <span class="small">test</span> test <span class="small"> test </span> test</p></div></body></html>
\ No newline at end of file

Deleted: trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.wiki
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.wiki	2006-03-26 19:06:23 UTC (rev 10)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.wiki	2006-03-26 20:37:50 UTC (rev 11)
@@ -1,27 +0,0 @@
-/test / / test/ / test / /test/ t/es/t
-
-*test * * test* * test * *test* t*es*t
-
-_test _ _ test_ _ test _ _test_ t_es_t
-
-=test = = test= = test = =test= t=es=t
-
-test[/ test test /]test [/test/] test [/ test /] test
-
-test[* test test *]test [*test*] test [* test *] test
-
-test[_ test test _]test [_test_] test [_ test _] test
-
-test[= test test =]test [=test=] test [= test =] test
-
-test[' test test ']test ['test'] test [' test '] test
-
-test[" test test "]test ["test"] test [" test "] test
-
-test[^ test test ^]test [^test^] test [^ test ^] test
-
-test[, test test ,]test [,test,] test [, test ,] test
-
-test[# test test #]test [#test#] test [# test #] test
-
-test[~ test test ~]test [~test~] test [~ test ~] test

Copied: trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks. (from rev 10, trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.complete.xml)

Copied: trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.wiki (from rev 10, trunk/fellowiki/tests/wiki/tests/simple_markup/some-special-markup-with-blanks.wiki)

Added: trunk/fellowiki/tests/wiki/tests/simple_markup/special_characters.complete.xml
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/special_characters.complete.xml	2006-03-26 19:06:23 UTC (rev 10)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/special_characters.complete.xml	2006-03-26 20:37:50 UTC (rev 11)
@@ -0,0 +1 @@
+<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>n&#8211;dash n &#8211;dash n&#8211; dash n &#8211; dash m&#8212;dash m &#8212;dash m&#8212; dash m &#8212; dash</p></div></body></html>
\ No newline at end of file



From fingerle at berlios.de  Sun Mar 26 22:39:48 2006
From: fingerle at berlios.de (fingerle at BerliOS)
Date: Sun, 26 Mar 2006 22:39:48 +0200
Subject: [fellowiki-svncheckins] r12 - trunk/fellowiki/tests/wiki/tests/simple_markup
Message-ID: <200603262039.k2QKdmg4009254@sheep.berlios.de>

Author: fingerle
Date: 2006-03-26 22:39:47 +0200 (Sun, 26 Mar 2006)
New Revision: 12

Added:
   trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.complete.xml
Removed:
   trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.
Log:
- yet another fix for a falsely renamed file in r11 (which was a fix to r10)


Deleted: trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.
===================================================================
--- trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.	2006-03-26 20:37:50 UTC (rev 11)
+++ trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.	2006-03-26 20:39:47 UTC (rev 12)
@@ -1 +0,0 @@
-<html xmlns="http://www.w3.org/1999/xhtml"><head><title /></head><body><div class="parsed-wiki-content"><p>/test / / test/ / test / <em class="italic">test</em> t<em class="italic">es</em>t</p><p>*test * * test* * test * <b class="bold">test</b> t<b class="bold">es</b>t</p><p>_test _ _ test_ _ test _ <span class="underlined">test</span> t<span class="underlined">es</span>t</p><p>=test = = test= = test = <tt class="typewriter">test</tt> t<tt class="typewriter">es</tt>t</p><p>test<em class="italic"> test test </em>test <em class="italic">test</em> test <em class="italic"> test </em> test</p><p>test<b class="bold"> test test </b>test <b class="bold">test</b> test <b class="bold"> test </b> test</p><p>test<span class="underlined"> test test </span>test <span class="underlined">test</span> test <span class="underlined"> test </span> test</p><p>test<tt class="typewriter"> test test </tt>test <tt class="typewriter">test</tt> test <tt class="typewriter"> test </tt> test</p><p>test<!
 span class="single_quotes"> test test </span>test <span class="single_quotes">test</span> test <span class="single_quotes"> test </span> test</p><p>test<span class="double_quotes"> test test </span>test <span class="double_quotes">test</span> test <span class="double_quotes"> test </span> test</p><p>test<span class="superscript"> test test </span>test <span class="superscript">test</span> test <span class="superscript"> test </span> test</p><p>test<span class="subscript"> test test </span>test <span class="subscript">test</span> test <span class="subscript"> test </span> test</p><p>test<span class="large"> test test </span>test <span class="large">test</span> test <span class="large"> test </span> test</p><p>test<span class="small"> test test </span>test <span class="small">test</span> test <span class="small"> test </span> test</p></div></body></html>
\ No newline at end of file

Copied: trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.complete.xml (from rev 11, trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.)



From fingerle at berlios.de  Sun Mar 26 23:13:29 2006
From: fingerle at berlios.de (fingerle at BerliOS)
Date: Sun, 26 Mar 2006 23:13:29 +0200
Subject: [fellowiki-svncheckins] r13 - / branches pjm pjm/planning pjm/tools tags trunk trunk/fellowiki trunk/fellowiki/tests trunk/fellowiki/tests/wiki trunk/fellowiki/tests/wiki/tests trunk/fellowiki/tests/wiki/tests/known_issues trunk/fellowiki/tests/wiki/tests/known_issues/stress_test trunk/fellowiki/tests/wiki/tests/mixed_markup trunk/fellowiki/tests/wiki/tests/real_world trunk/fellowiki/tests/wiki/tests/simple_markup trunk/fellowiki/third_party trunk/fellowiki/third_party/w3c trunk/fellowiki/util trunk/fellowiki/wiki
Message-ID: <200603262113.k2QLDToX013022@sheep.berlios.de>

Author: fingerle
Date: 2006-03-26 23:13:24 +0200 (Sun, 26 Mar 2006)
New Revision: 13

Modified:
   /
   branches/
   pjm/
   pjm/milestones.txt
   pjm/planning/
   pjm/pointers
   pjm/tasks.txt
   pjm/tools/
   tags/
   trunk/
   trunk/fellowiki/
   trunk/fellowiki/__init__.py
   trunk/fellowiki/tests/
   trunk/fellowiki/tests/README
   trunk/fellowiki/tests/__init__.py
   trunk/fellowiki/tests/pylintrc
   trunk/fellowiki/tests/wiki/
   trunk/fellowiki/tests/wiki/__init__.py
   trunk/fellowiki/tests/wiki/tests/
   trunk/fellowiki/tests/wiki/tests/known_issues/
   trunk/fellowiki/tests/wiki/tests/known_issues/stress_test/
   trunk/fellowiki/tests/wiki/tests/mixed_markup/
   trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_concurrent.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_concurrent.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_embedded.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_embedded.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_concurrent.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_concurrent.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_embedded.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_embedded.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/pre_with_non_pre.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/pre_with_non_pre.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_concurrent.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_concurrent.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_embedded.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_embedded.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_concurrent.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_concurrent.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_embedded.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_embedded.wiki
   trunk/fellowiki/tests/wiki/tests/real_world/
   trunk/fellowiki/tests/wiki/tests/simple_markup/
   trunk/fellowiki/tests/wiki/tests/simple_markup/bold_block.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/bold_block.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/bold_local.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/bold_local.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/double_quotes.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/double_quotes.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/empty.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/empty.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/escaped_text.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/escaped_text.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/horizontal_rule.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/horizontal_rule.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/include_link_rename.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/include_link_simple.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic_block.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic_block.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic_local.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic_local.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/just_text.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/just_text.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/just_text_multiline.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/just_text_multiline.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/large_font.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/large_font.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/link_rename.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/link_simple.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/lists_combined.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/lists_invalid.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/macros.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/numbered_list_simple.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/numbered_lists_hierarchical.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph_modified.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/pre.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/pre.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/single_quotes.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/single_quotes.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/small_font.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/small_font.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/special_characters.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/special_characters.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/special_chars.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/special_chars.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/subscript.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/subscript.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/superscript.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/superscript.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/tables_modified.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/tables_simple.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_block.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_block.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_local.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_local.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_block.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_block.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_local.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_local.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/unnumbered_list_simple.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/unnumbered_lists_hierarchical.wiki
   trunk/fellowiki/tests/wiki/ut_parser.py
   trunk/fellowiki/third_party/
   trunk/fellowiki/third_party/w3c/
   trunk/fellowiki/third_party/w3c/LICENSE
   trunk/fellowiki/third_party/w3c/xhtml-lat1.ent
   trunk/fellowiki/third_party/w3c/xhtml-special.ent
   trunk/fellowiki/third_party/w3c/xhtml-symbol.ent
   trunk/fellowiki/third_party/w3c/xhtml1-strict.dtd
   trunk/fellowiki/util/
   trunk/fellowiki/util/__init__.py
   trunk/fellowiki/util/assorted.py
   trunk/fellowiki/wiki/
   trunk/fellowiki/wiki/__init__.py
   trunk/fellowiki/wiki/parser.py
Log:
- set properties



Property changes on: 
___________________________________________________________________
Name: svn:ignore
   + *.pyc



Property changes on: branches
___________________________________________________________________
Name: svn:ignore
   + *.pyc



Property changes on: pjm
___________________________________________________________________
Name: svn:ignore
   + *.pyc



Property changes on: pjm/milestones.txt
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: pjm/planning
___________________________________________________________________
Name: svn:ignore
   + *.pyc



Property changes on: pjm/pointers
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: pjm/tasks.txt
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: pjm/tools
___________________________________________________________________
Name: svn:ignore
   + *.pyc



Property changes on: tags
___________________________________________________________________
Name: svn:ignore
   + *.pyc



Property changes on: trunk
___________________________________________________________________
Name: svn:ignore
   + *.pyc



Property changes on: trunk/fellowiki
___________________________________________________________________
Name: svn:ignore
   + *.pyc



Property changes on: trunk/fellowiki/__init__.py
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests
___________________________________________________________________
Name: svn:ignore
   + *.pyc



Property changes on: trunk/fellowiki/tests/README
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/__init__.py
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/pylintrc
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki
___________________________________________________________________
Name: svn:ignore
   + *.pyc



Property changes on: trunk/fellowiki/tests/wiki/__init__.py
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests
___________________________________________________________________
Name: svn:ignore
   + *.generated.*



Property changes on: trunk/fellowiki/tests/wiki/tests/known_issues
___________________________________________________________________
Name: svn:ignore
   + *.generated.*



Property changes on: trunk/fellowiki/tests/wiki/tests/known_issues/stress_test
___________________________________________________________________
Name: svn:ignore
   + *.generated.*



Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup
___________________________________________________________________
Name: svn:ignore
   + *.generated.*



Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_concurrent.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_concurrent.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_embedded.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_embedded.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_concurrent.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_concurrent.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_embedded.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_embedded.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/pre_with_non_pre.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/pre_with_non_pre.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_concurrent.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_concurrent.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_embedded.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_embedded.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_concurrent.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_concurrent.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_embedded.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_embedded.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/real_world
___________________________________________________________________
Name: svn:ignore
   + *.generated.*



Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup
___________________________________________________________________
Name: svn:ignore
   + *.generated.*



Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/bold_block.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/bold_block.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/bold_local.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/bold_local.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/double_quotes.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/double_quotes.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/empty.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/empty.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/escaped_text.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/escaped_text.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/horizontal_rule.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/horizontal_rule.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/include_link_rename.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/include_link_simple.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/italic_block.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/italic_block.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/italic_local.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/italic_local.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/just_text.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/just_text.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/just_text_multiline.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/just_text_multiline.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/large_font.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/large_font.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/link_rename.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/link_simple.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/lists_combined.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/lists_invalid.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/macros.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/numbered_list_simple.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/numbered_lists_hierarchical.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph_modified.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/pre.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/pre.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/single_quotes.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/single_quotes.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/small_font.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/small_font.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/special_characters.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/special_characters.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/special_chars.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/special_chars.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/subscript.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/subscript.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/superscript.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/superscript.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/tables_modified.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/tables_simple.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_block.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_block.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_local.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_local.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_block.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_block.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_local.complete.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_local.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/unnumbered_list_simple.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/unnumbered_lists_hierarchical.wiki
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/tests/wiki/ut_parser.py
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/third_party
___________________________________________________________________
Name: svn:ignore
   + *.pyc



Property changes on: trunk/fellowiki/third_party/w3c
___________________________________________________________________
Name: svn:ignore
   + *.pyc



Property changes on: trunk/fellowiki/third_party/w3c/LICENSE
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/third_party/w3c/xhtml-lat1.ent
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/third_party/w3c/xhtml-special.ent
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/third_party/w3c/xhtml-symbol.ent
___________________________________________________________________
Name: svn:keywords
   + Revision

Modified: trunk/fellowiki/third_party/w3c/xhtml1-strict.dtd
===================================================================
--- trunk/fellowiki/third_party/w3c/xhtml1-strict.dtd	2006-03-26 20:39:47 UTC (rev 12)
+++ trunk/fellowiki/third_party/w3c/xhtml1-strict.dtd	2006-03-26 21:13:24 UTC (rev 13)
@@ -16,7 +16,7 @@
    PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    SYSTEM "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"
 
-   $Revision: 1.1 $
+   $Revision$
    $Date: 2002/08/01 13:56:03 $
 
 -->


Property changes on: trunk/fellowiki/third_party/w3c/xhtml1-strict.dtd
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/util
___________________________________________________________________
Name: svn:ignore
   + *.pyc



Property changes on: trunk/fellowiki/util/__init__.py
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/util/assorted.py
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/wiki
___________________________________________________________________
Name: svn:ignore
   + *.pyc



Property changes on: trunk/fellowiki/wiki/__init__.py
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: trunk/fellowiki/wiki/parser.py
___________________________________________________________________
Name: svn:keywords
   + Revision



From fingerle at berlios.de  Sun Mar 26 23:25:08 2006
From: fingerle at berlios.de (fingerle at BerliOS)
Date: Sun, 26 Mar 2006 23:25:08 +0200
Subject: [fellowiki-svncheckins] r14 - pjm pjm/planning trunk/fellowiki/tests trunk/fellowiki/tests/wiki/tests/mixed_markup trunk/fellowiki/tests/wiki/tests/simple_markup trunk/fellowiki/third_party trunk/fellowiki/third_party/w3c
Message-ID: <200603262125.k2QLP8LM015016@sheep.berlios.de>

Author: fingerle
Date: 2006-03-26 23:25:01 +0200 (Sun, 26 Mar 2006)
New Revision: 14

Modified:
   pjm/
   pjm/planning/
   trunk/fellowiki/tests/pylintrc
   trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_concurrent.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_concurrent.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_embedded.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_embedded.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_concurrent.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_concurrent.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_embedded.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_embedded.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/pre_with_non_pre.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/pre_with_non_pre.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_concurrent.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_concurrent.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_embedded.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_embedded.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_concurrent.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_concurrent.wiki
   trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_embedded.complete.xml
   trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_embedded.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/bold_block.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/bold_block.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/bold_local.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/bold_local.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/double_quotes.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/double_quotes.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/empty.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/empty.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/escaped_text.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/escaped_text.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/horizontal_rule.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/horizontal_rule.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/include_link_rename.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/include_link_simple.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic_block.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic_block.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic_local.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/italic_local.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/just_text.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/just_text.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/just_text_multiline.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/just_text_multiline.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/large_font.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/large_font.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/link_rename.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/link_simple.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/lists_combined.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/lists_invalid.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/macros.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/numbered_list_simple.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/numbered_lists_hierarchical.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph_modified.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/pre.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/pre.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/single_quotes.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/single_quotes.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/small_font.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/small_font.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/special_characters.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/special_characters.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/special_chars.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/special_chars.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/subscript.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/subscript.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/superscript.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/superscript.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/tables_modified.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/tables_simple.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_block.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_block.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_local.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_local.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_block.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_block.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_local.complete.xml
   trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_local.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/unnumbered_list_simple.wiki
   trunk/fellowiki/tests/wiki/tests/simple_markup/unnumbered_lists_hierarchical.wiki
   trunk/fellowiki/third_party/
   trunk/fellowiki/third_party/w3c/
   trunk/fellowiki/third_party/w3c/LICENSE
   trunk/fellowiki/third_party/w3c/xhtml-lat1.ent
   trunk/fellowiki/third_party/w3c/xhtml-special.ent
   trunk/fellowiki/third_party/w3c/xhtml-symbol.ent
   trunk/fellowiki/third_party/w3c/xhtml1-strict.dtd
Log:
- some fixes to svn properties



Property changes on: pjm
___________________________________________________________________
Name: svn:ignore
   - *.pyc



Property changes on: pjm/planning
___________________________________________________________________
Name: svn:ignore
   - *.pyc



Property changes on: trunk/fellowiki/tests/pylintrc
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_concurrent.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_concurrent.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_embedded.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/bold_embedded.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_concurrent.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_concurrent.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_embedded.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/italic_embedded.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/pre_with_non_pre.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/pre_with_non_pre.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_concurrent.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_concurrent.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_embedded.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/typewriter_embedded.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_concurrent.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_concurrent.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_embedded.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup/underlined_embedded.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/bold_block.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/bold_block.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/bold_local.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/bold_local.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/double_quotes.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/double_quotes.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/empty.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/empty.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/escaped_text.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/escaped_text.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/headlines.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/horizontal_rule.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/horizontal_rule.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/include_link_rename.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/include_link_simple.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/italic_block.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/italic_block.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/italic_local.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/italic_local.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/just_text.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/just_text.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/just_text_multiline.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/just_text_multiline.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/large_font.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/large_font.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/line_break.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/link_rename.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/link_simple.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/lists_combined.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/lists_invalid.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/macros.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/numbered_list_simple.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/numbered_lists_hierarchical.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/paragraph_modified.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/pre.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/pre.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/single_quotes.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/single_quotes.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/small_font.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/small_font.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/some_special_markup_with_blanks.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/special_characters.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/special_characters.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/special_chars.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/special_chars.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/subscript.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/subscript.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/superscript.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/superscript.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/tables_modified.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/tables_simple.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_block.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_block.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_local.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/typewriter_local.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_block.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_block.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_local.complete.xml
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/underlined_local.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/unnumbered_list_simple.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup/unnumbered_lists_hierarchical.wiki
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/third_party
___________________________________________________________________
Name: svn:ignore
   - *.pyc



Property changes on: trunk/fellowiki/third_party/w3c
___________________________________________________________________
Name: svn:ignore
   - *.pyc



Property changes on: trunk/fellowiki/third_party/w3c/LICENSE
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/third_party/w3c/xhtml-lat1.ent
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/third_party/w3c/xhtml-special.ent
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/third_party/w3c/xhtml-symbol.ent
___________________________________________________________________
Name: svn:keywords
   - Revision

Modified: trunk/fellowiki/third_party/w3c/xhtml1-strict.dtd
===================================================================
--- trunk/fellowiki/third_party/w3c/xhtml1-strict.dtd	2006-03-26 21:13:24 UTC (rev 13)
+++ trunk/fellowiki/third_party/w3c/xhtml1-strict.dtd	2006-03-26 21:25:01 UTC (rev 14)
@@ -16,7 +16,7 @@
    PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    SYSTEM "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"
 
-   $Revision$
+   $Revision: 13 $
    $Date: 2002/08/01 13:56:03 $
 
 -->


Property changes on: trunk/fellowiki/third_party/w3c/xhtml1-strict.dtd
___________________________________________________________________
Name: svn:keywords
   - Revision



From fingerle at berlios.de  Sun Mar 26 23:33:55 2006
From: fingerle at berlios.de (fingerle at BerliOS)
Date: Sun, 26 Mar 2006 23:33:55 +0200
Subject: [fellowiki-svncheckins] r15 - / branches pjm pjm/tools tags trunk trunk/fellowiki trunk/fellowiki/tests trunk/fellowiki/tests/wiki trunk/fellowiki/tests/wiki/tests trunk/fellowiki/tests/wiki/tests/known_issues trunk/fellowiki/tests/wiki/tests/known_issues/stress_test trunk/fellowiki/tests/wiki/tests/mixed_markup trunk/fellowiki/tests/wiki/tests/real_world trunk/fellowiki/tests/wiki/tests/simple_markup trunk/fellowiki/util trunk/fellowiki/wiki
Message-ID: <200603262133.k2QLXtRK015839@sheep.berlios.de>

Author: fingerle
Date: 2006-03-26 23:33:54 +0200 (Sun, 26 Mar 2006)
New Revision: 15

Modified:
   /
   branches/
   pjm/milestones.txt
   pjm/pointers
   pjm/tasks.txt
   pjm/tools/
   tags/
   trunk/
   trunk/fellowiki/
   trunk/fellowiki/__init__.py
   trunk/fellowiki/tests/
   trunk/fellowiki/tests/README
   trunk/fellowiki/tests/__init__.py
   trunk/fellowiki/tests/pylintrc
   trunk/fellowiki/tests/wiki/
   trunk/fellowiki/tests/wiki/__init__.py
   trunk/fellowiki/tests/wiki/tests/
   trunk/fellowiki/tests/wiki/tests/known_issues/
   trunk/fellowiki/tests/wiki/tests/known_issues/stress_test/
   trunk/fellowiki/tests/wiki/tests/mixed_markup/
   trunk/fellowiki/tests/wiki/tests/real_world/
   trunk/fellowiki/tests/wiki/tests/simple_markup/
   trunk/fellowiki/tests/wiki/ut_parser.py
   trunk/fellowiki/util/
   trunk/fellowiki/util/__init__.py
   trunk/fellowiki/util/assorted.py
   trunk/fellowiki/wiki/
   trunk/fellowiki/wiki/__init__.py
   trunk/fellowiki/wiki/parser.py
Log:
- decision - after testing - not to use properties
- removing revision attributes



Property changes on: 
___________________________________________________________________
Name: svn:ignore
   - *.pyc



Property changes on: branches
___________________________________________________________________
Name: svn:ignore
   - *.pyc



Property changes on: pjm/milestones.txt
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: pjm/pointers
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: pjm/tasks.txt
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: pjm/tools
___________________________________________________________________
Name: svn:ignore
   - *.pyc



Property changes on: tags
___________________________________________________________________
Name: svn:ignore
   - *.pyc



Property changes on: trunk
___________________________________________________________________
Name: svn:ignore
   - *.pyc



Property changes on: trunk/fellowiki
___________________________________________________________________
Name: svn:ignore
   - *.pyc


Modified: trunk/fellowiki/__init__.py
===================================================================
--- trunk/fellowiki/__init__.py	2006-03-26 21:25:01 UTC (rev 14)
+++ trunk/fellowiki/__init__.py	2006-03-26 21:33:54 UTC (rev 15)
@@ -28,5 +28,3 @@
     - tests: tests (mainly unit tests) for the fellowiki package
     
 """
-
-__revision__ = "$Revision:$"


Property changes on: trunk/fellowiki/__init__.py
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests
___________________________________________________________________
Name: svn:ignore
   - *.pyc



Property changes on: trunk/fellowiki/tests/README
___________________________________________________________________
Name: svn:keywords
   - Revision

Modified: trunk/fellowiki/tests/__init__.py
===================================================================
--- trunk/fellowiki/tests/__init__.py	2006-03-26 21:25:01 UTC (rev 14)
+++ trunk/fellowiki/tests/__init__.py	2006-03-26 21:33:54 UTC (rev 15)
@@ -26,5 +26,3 @@
     - wiki:  tests for the wiki engine
     
 """
-
-__revision__ = "$Revision:$"


Property changes on: trunk/fellowiki/tests/__init__.py
___________________________________________________________________
Name: svn:keywords
   - Revision

Modified: trunk/fellowiki/tests/pylintrc
===================================================================
--- trunk/fellowiki/tests/pylintrc	2006-03-26 21:25:01 UTC (rev 14)
+++ trunk/fellowiki/tests/pylintrc	2006-03-26 21:33:54 UTC (rev 15)
@@ -2,7 +2,7 @@
 # Include message's id in output
 include-ids=yes
 
-disable-msg=I0011, W0142, W0704, W0231, W0201
+disable-msg=I0011, W0142, W0704, W0231, W0201, W0103
 
 [VARIABLES]
 # List of variable names used for dummy variables (i.e. not used).


Property changes on: trunk/fellowiki/tests/wiki
___________________________________________________________________
Name: svn:ignore
   - *.pyc


Modified: trunk/fellowiki/tests/wiki/__init__.py
===================================================================
--- trunk/fellowiki/tests/wiki/__init__.py	2006-03-26 21:25:01 UTC (rev 14)
+++ trunk/fellowiki/tests/wiki/__init__.py	2006-03-26 21:33:54 UTC (rev 15)
@@ -26,7 +26,3 @@
     - ut_wikiparser: unit tests for the wiki parser
     
 """
-
-__revision__ = "$Revision:$"
-
-# TODO: move Wiki package to wiki


Property changes on: trunk/fellowiki/tests/wiki/__init__.py
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/tests/wiki/tests
___________________________________________________________________
Name: svn:ignore
   - *.generated.*



Property changes on: trunk/fellowiki/tests/wiki/tests/known_issues
___________________________________________________________________
Name: svn:ignore
   - *.generated.*



Property changes on: trunk/fellowiki/tests/wiki/tests/known_issues/stress_test
___________________________________________________________________
Name: svn:ignore
   - *.generated.*



Property changes on: trunk/fellowiki/tests/wiki/tests/mixed_markup
___________________________________________________________________
Name: svn:ignore
   - *.generated.*



Property changes on: trunk/fellowiki/tests/wiki/tests/real_world
___________________________________________________________________
Name: svn:ignore
   - *.generated.*



Property changes on: trunk/fellowiki/tests/wiki/tests/simple_markup
___________________________________________________________________
Name: svn:ignore
   - *.generated.*


Modified: trunk/fellowiki/tests/wiki/ut_parser.py
===================================================================
--- trunk/fellowiki/tests/wiki/ut_parser.py	2006-03-26 21:25:01 UTC (rev 14)
+++ trunk/fellowiki/tests/wiki/ut_parser.py	2006-03-26 21:33:54 UTC (rev 15)
@@ -33,8 +33,6 @@
 
 """
 
-__revision__ = "$Revision:$"
-
 import unittest
 import codecs
 import sys


Property changes on: trunk/fellowiki/tests/wiki/ut_parser.py
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/util
___________________________________________________________________
Name: svn:ignore
   - *.pyc


Modified: trunk/fellowiki/util/__init__.py
===================================================================
--- trunk/fellowiki/util/__init__.py	2006-03-26 21:25:01 UTC (rev 14)
+++ trunk/fellowiki/util/__init__.py	2006-03-26 21:33:54 UTC (rev 15)
@@ -26,5 +26,3 @@
     - assorted: should read "unsorted" ;-) TODO: Sort. Sort of. Ish. 
     
 """
-
-__revision__ = "$Revision:$"


Property changes on: trunk/fellowiki/util/__init__.py
___________________________________________________________________
Name: svn:keywords
   - Revision

Modified: trunk/fellowiki/util/assorted.py
===================================================================
--- trunk/fellowiki/util/assorted.py	2006-03-26 21:25:01 UTC (rev 14)
+++ trunk/fellowiki/util/assorted.py	2006-03-26 21:33:54 UTC (rev 15)
@@ -26,8 +26,6 @@
     
 """
 
-__revision__ = "$Revision:$"
-
 import re
 
 # TODO: howto support CElementTree (portably!, utf8-support?)


Property changes on: trunk/fellowiki/util/assorted.py
___________________________________________________________________
Name: svn:keywords
   - Revision


Property changes on: trunk/fellowiki/wiki
___________________________________________________________________
Name: svn:ignore
   - *.pyc


Modified: trunk/fellowiki/wiki/__init__.py
===================================================================
--- trunk/fellowiki/wiki/__init__.py	2006-03-26 21:25:01 UTC (rev 14)
+++ trunk/fellowiki/wiki/__init__.py	2006-03-26 21:33:54 UTC (rev 15)
@@ -26,5 +26,3 @@
     - assorted: should read "unsorted" ;-) TODO: Sort. Sort of. Ish. 
     
 """
-
-__revision__ = "$Revision:$"


Property changes on: trunk/fellowiki/wiki/__init__.py
___________________________________________________________________
Name: svn:keywords
   - Revision

Modified: trunk/fellowiki/wiki/parser.py
===================================================================
--- trunk/fellowiki/wiki/parser.py	2006-03-26 21:25:01 UTC (rev 14)
+++ trunk/fellowiki/wiki/parser.py	2006-03-26 21:33:54 UTC (rev 15)
@@ -27,9 +27,6 @@
     
 """
 
-__revision__ = "$Revision:$"
-
-
 from elementtree.ElementTree import Element, SubElement, tostring
 from fellowiki.util.assorted import attributes_from_dict, \
       remove_escaping_backslashes, add_element_contents, save_add


Property changes on: trunk/fellowiki/wiki/parser.py
___________________________________________________________________
Name: svn:keywords
   - Revision



